{"version":3,"sources":["C:/Git/daoc-log-parser/src async","C:/Git/daoc-log-parser/src/app/app.component.css","C:/Git/daoc-log-parser/src/app/app.component.html","C:/Git/daoc-log-parser/src/app/app.component.ts","C:/Git/daoc-log-parser/src/app/app.module.ts","C:/Git/daoc-log-parser/src/app/services/http.service.ts","C:/Git/daoc-log-parser/src/app/services/parser.service.ts","C:/Git/daoc-log-parser/src/app/services/services.module.ts","C:/Git/daoc-log-parser/src/environments/environment.ts","C:/Git/daoc-log-parser/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/daoc-log-parser/src async\n// module id = ../../../../../src async recursive\n// module chunks = 2","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/daoc-log-parser/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 2","module.exports = \"<div style=\\\"padding-left:4ch; padding-top: 4ch\\\">\\n    <!-- <div>\\n        <file-drop headertext=\\\"Drop files here\\\" (onFileDrop)=\\\"onFileUploaded($event)\\\">\\n        </file-drop>\\n    </div> -->\\n    \\n    <input type=\\\"file\\\" (change)=\\\"fileChange($event)\\\" placeholder=\\\"Upload file\\\" accept=\\\".log, .txt\\\">\\n\\n    <div>\\n        <h1><b>Parse Results</b></h1>\\n    </div>\\n\\n    <div class=\\\"container-fluid\\\">\\n        <form [formGroup]=\\\"parsedLogForm\\\" class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n                    \\n                <div class=\\\"col-sm-2\\\">\\n                    <h3 class=\\\"panel-heading\\\">Money</h3>\\n                        <!-- <div>\\n                            <div>\\n                                <label for=\\\"loot\\\">Looted: </label>\\n                                    {{currencyPrintHelper(resultsForPage.Cash.Loot)}}\\n                            </div>\\n                            <div>\\n                                <label for=\\\"expense\\\">Expenses: </label>\\n                                    {{currencyPrintHelper(resultsForPage.Cash.Expense)}}\\n                            </div>\\n                            <div>\\n                                <label for=\\\"income\\\">Income: </label>\\n                                    {{currencyPrintHelper(resultsForPage.Cash.Income)}}\\n                            </div>\\n                        </div> -->\\n                        <table style=\\\"width: 100%\\\">\\n                            <tr>\\n                                <td><strong>Looted:</strong></td>\\n                                <td style=\\\"text-align: right\\\">{{currencyPrintHelper(resultsForPage.Cash.Loot)}}</td>\\n                            </tr>\\n                            <tr>\\n                                <td><strong>Expenses:</strong></td>\\n                                <td style=\\\"text-align: right\\\">{{currencyPrintHelper(resultsForPage.Cash.Expense)}}</td>\\n                            </tr>\\n                            <tr>\\n                                <td><strong>Income:</strong></td>\\n                                <td style=\\\"text-align: right\\\">{{currencyPrintHelper(resultsForPage.Cash.Income)}}</td>\\n                            </tr>\\n                        </table>\\n                </div>\\n                <div class=\\\"col-sm-2\\\">\\n                    <h3 class=\\\"panel-heading\\\">Healing</h3>\\n                        <!-- <div>\\n                            <div>\\n                                <label for=\\\"healing-delivered\\\">Delivered: </label>\\n                                    {{resultsForPage.Healing.Delivered}}\\n                            </div>\\n                            <div>\\n                                <label for=\\\"healing-received\\\">Received: </label>\\n                                    {{resultsForPage.Healing.Received}}\\n                            </div>\\n                            <div>\\n                                <label for=\\\"healing-lifetapped\\\">Lifetapped: </label>\\n                                    {{resultsForPage.Healing.Lifetapped}}\\n                            </div>\\n                            <div>\\n                                <label for=\\\"healing-targets\\\">Targets: </label>\\n                                <ul id=\\\"healing-targets\\\">\\n                                    <li *ngFor=\\\"let target of resultsForPage.Healing.Targets\\\">{{target}}</li>\\n                                </ul>\\n                            </div>\\n                            <div>\\n                                <label for=\\\"healing-sources\\\">Sources: </label>\\n                                <ul id=\\\"healing-targets\\\">\\n                                    <li *ngFor=\\\"let source of resultsForPage.Healing.Sources\\\">{{source}}</li>\\n                                </ul>\\n                            </div>\\n                        </div> -->\\n                        <table>\\n                            <tr>\\n                                <td><strong>Delivered:</strong></td>\\n                                <td style=\\\"text-align: right\\\">{{resultsForPage.Healing.Delivered | number}}</td>\\n                            </tr>\\n                            <tr>\\n                                <td><strong>Received:</strong></td>\\n                                <td style=\\\"text-align: right\\\">{{resultsForPage.Healing.Received | number}}</td>\\n                            </tr>\\n                            <tr>\\n                                <td><strong>Lifetapped:</strong></td>\\n                                <td style=\\\"text-align: right\\\">{{resultsForPage.Healing.Lifetapped | number}}</td>\\n                            </tr>\\n                        </table>\\n                        <h5><strong>Delivered breakdown:</strong></h5>\\n                        <table class=\\\"scrollTable\\\">\\n                            <tr *ngFor=\\\"let target of resultsForPage.Healing.Targets\\\">\\n                                <td>{{target[0]}}</td>\\n                                <td style=\\\"text-align:right\\\">{{target[1] | number}}</td>\\n                            </tr>\\n                        </table>\\n                        <h5><strong>Received breakdown:</strong></h5>\\n                        <table class=\\\"scrollTable\\\">\\n                            <tr *ngFor=\\\"let source of resultsForPage.Healing.Sources\\\">\\n                                <td>{{source[0]}}</td>\\n                                <td style=\\\"text-align:right\\\">{{source[1] | number}}</td>\\n                            </tr>\\n                        </table>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <h3>Combat</h3>\\n                <div class=\\\"panel-default panel\\\">\\n                    <div class=\\\"col-sm-2\\\">\\n                        <h4>Melee Attack</h4>\\n                            <!-- <div>\\n                                <div>\\n                                    <label for=\\\"attack-melee-hits\\\">Hits: </label>\\n                                        {{resultsForPage.Combat.MeleeAttack.Hits}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"attack-melee-misses\\\">Misses: </label>\\n                                        {{resultsForPage.Combat.MeleeAttack.Misses}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"attack-melee-evades\\\">Evades: </label>\\n                                        {{resultsForPage.Combat.MeleeAttack.Evavdes}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"attack-melee-parries\\\">Parries: </label>\\n                                        {{resultsForPage.Combat.MeleeAttack.Parries}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"attack-melee-blocks\\\">Blocks: </label>\\n                                        {{resultsForPage.Combat.MeleeAttack.Blocks}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"attack-melee-crits\\\">Critical Hits: </label>\\n                                        {{resultsForPage.Combat.MeleeAttack.Crits}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"attack-melee-crit-damage\\\">Critical Damage: </label>\\n                                        {{resultsForPage.Combat.MeleeAttack.CritDamage}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"attack-melee-base-damage\\\">Base Damage: </label>\\n                                        {{resultsForPage.Combat.MeleeAttack.BaseDamage}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"attack-melee-total-attacks\\\">Total Attacks: </label>\\n                                        {{resultsForPage.Combat.MeleeAttack.TotalAttacks}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"attack-melee-total-damage\\\">Total Damage: </label>\\n                                        {{resultsForPage.Combat.MeleeAttack.TotalDamage}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"attack-melee-targets\\\">Targets: </label>\\n                                    <ul id=\\\"attack-melee-targets\\\">\\n                                        <li *ngFor=\\\"let target of resultsForPage.Combat.MeleeAttack.Targets\\\">{{target}}</li>\\n                                    </ul>\\n                                </div>\\n                            </div> -->\\n                            <table>\\n                                <tr>\\n                                    <td><strong>Hits:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.Hits | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Blocks:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.Blocks | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Parries:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.Parries | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Evades:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.Evades | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Misses:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.Misses | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Total Attacks:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.TotalAttacks | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Base Dmg:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.BaseDamage | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Crits:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.Crits | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Crit Dmg:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.CritDamage | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Total Dmg:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.TotalDamage | number}}</td>\\n                                </tr>\\n                            </table>\\n                            <h5><strong>Damage Breakdown:</strong></h5>\\n                            <table class=\\\"scrollTable\\\">\\n                                <tr *ngFor=\\\"let dmgTarget of resultsForPage.Combat.MeleeAttack.Targets\\\">\\n                                    <td>{{dmgTarget[0]}}</td>\\n                                    <td style=\\\"text-align: right\\\">{{dmgTarget[1] | number}}</td>\\n                                </tr>\\n                            </table>\\n                    </div>\\n                    <div class=\\\"col-sm-2\\\">\\n                        <h4>Caster Attack</h4>\\n                            <!-- <div>\\n                                <div>\\n                                    <label for=\\\"attack-spells-landed\\\">Hits: </label>\\n                                        {{resultsForPage.Combat.CasterAttack.Landed}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"attack-spells-resisted\\\">Resisted: </label>\\n                                        {{resultsForPage.Combat.CasterAttack.Resisted}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"attack-spells-crits\\\">Critical Hits: </label>\\n                                        {{resultsForPage.Combat.CasterAttack.Crits}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"attack-spells-base-damage\\\">Damage: </label>\\n                                        {{resultsForPage.Combat.CasterAttack.BaseDamage}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"attack-spells-crit-damage\\\">Crit Damage: </label>\\n                                        {{resultsForPage.Combat.CasterAttack.CritDamage}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"attack-spells-total-damage\\\">Total Damage: </label>\\n                                        {{resultsForPage.Combat.CasterAttack.TotalDamage}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"attack-spells-targets\\\">Targets: </label>\\n                                    <ul id=\\\"attack-spells-targets\\\">\\n                                        <li *ngFor=\\\"let target of resultsForPage.Combat.CasterAttack.Targets\\\">{{target}}</li>\\n                                    </ul>\\n                                </div>\\n                            </div> -->\\n                            <table>\\n                                <tr>\\n                                    <td><strong>Hits:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.CasterAttack.Landed | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Resists:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.CasterAttack.Resists | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>TotalAttacks:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.CasterAttack.TotalAttacks | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Base Dmg:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.CasterAttack.BaseDamage | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Crits:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.CasterAttack.Crits | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Crit Dmg:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.CasterAttack.CritDamage | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Total Dmg:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.CasterAttack.TotalDamage | number}}</td>\\n                                </tr>\\n                            </table>\\n                            <h5><strong>Damage Breakdown:</strong></h5>\\n                            <table class=\\\"scrollTable\\\">\\n                                <tr *ngFor=\\\"let dmgTarget of resultsForPage.Combat.CasterAttack.Targets\\\">\\n                                    <td>{{dmgTarget[0]}}</td>\\n                                    <td style=\\\"text-align: right\\\">{{dmgTarget[1] | number}}</td>\\n                                </tr>\\n                            </table>\\n                    </div>\\n                    <div class=\\\"col-sm-2\\\">\\n                        <h4>Defense</h4>\\n                            <!-- <div>\\n                                <div>\\n                                    <label for=\\\"defense-hits\\\">Hits: </label>\\n                                        {{resultsForPage.Combat.Defense.Hits}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"defense-blocks\\\">Blocks: </label>\\n                                        {{resultsForPage.Combat.Defense.Blocks}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"defense-evades\\\">Evades: </label>\\n                                        {{resultsForPage.Combat.Defense.Evades}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"defense-parries\\\">Parries: </label>\\n                                        {{resultsForPage.Combat.Defense.Parries}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"defense-misses\\\">Misses: </label>\\n                                        {{resultsForPage.Combat.Defense.Misses}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"defense-resists\\\">Resists: </label>\\n                                        {{resultsForPage.Combat.Defense.Resists}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"defense-total-attacks\\\">Total Attacks: </label>\\n                                        {{resultsForPage.Combat.Defense.TotalAttacks}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"defense-melee-damage\\\">Melee Damage: </label>\\n                                        {{resultsForPage.Combat.Defense.MeleeDamage}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"defense-crits\\\">Critical Hits: </label>\\n                                        {{resultsForPage.Combat.Defense.Crits}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"defense-crit-damage\\\">Critical Damage: </label>\\n                                        {{resultsForPage.Combat.Defense.CritDamage}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"defense-absorbs\\\">Damage Absorbed: </label>\\n                                        {{resultsForPage.Combat.Defense.Absorbed}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"defense-spells-landed\\\">Spells/Procs: </label>\\n                                        {{resultsForPage.Combat.Defense.SpellsLanded}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"defense-spell-damage\\\">Spell Damage: </label>\\n                                        {{resultsForPage.Combat.Defense.SpellDamage}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"defense-total-damage\\\">Total Damage: </label>\\n                                        {{resultsForPage.Combat.Defense.TotalDamage}}\\n                                </div>\\n                                <div>\\n                                    <label for=\\\"defense-sources\\\">Damage Sources: </label>\\n                                    <ul id=\\\"defense-sources\\\">\\n                                        <li *ngFor=\\\"let source of resultsForPage.Combat.Defense.Sources\\\">{{source}}</li>\\n                                    </ul>\\n                                </div>\\n                            </div> -->\\n                            <table>\\n                                <tr>\\n                                    <td><strong>Hits:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Hits | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Blocks:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Blocks | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Parries:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Parries | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Evades:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Evades | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Misses:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Misses | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Tot Melee Attacks:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.TotalMeleeAttacks | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Crits:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Crits | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Crit Dmg:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.CritDamage | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Melee Damage:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.TotalDamage | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Absorbed:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Absorbed | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Spells/Procs:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.SpellsLanded | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Resists:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Resists | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Tot Magic Attacks:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.TotalSpellAttacks | number}}</td>\\n                                </tr>    \\n                                <tr>\\n                                    <td><strong>Spell Dmg:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.SpellDamage | number}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><strong>Total Dmg:</strong></td>\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.TotalDamage | number}}</td>\\n                                </tr>\\n                            </table>\\n                            <h5><strong>Damage Breakdown:</strong></h5>\\n                            <table class=\\\"scrollTable\\\">\\n                                <tr *ngFor=\\\"let dmgSource of resultsForPage.Combat.Defense.Sources\\\">\\n                                    <td>{{dmgSource[0]}}</td>\\n                                    <td style=\\\"text-align: right\\\">{{dmgSource[1] | number}}</td>\\n                                </tr>\\n                            </table>\\n                    </div>\\n                </div>\\n                \\n            </div>\\n        </form>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/daoc-log-parser/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 2","import { Component, OnInit, Input, HostListener } from '@angular/core';\nimport { FormsModule, FormGroup, FormBuilder, FormControl, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { FileDropModule, UploadFile, UploadEvent } from 'ngx-file-drop';\nimport { ParserService } from './services/parser.service';\n\nimport { ParsingResults } from '../models/parse-results.model';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  \n  @Input() fileExt: string = \"TXT, LOG\";\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private parserService: ParserService\n  ) {}\n\n  parsedLogForm: FormGroup;\n  files: UploadFile[] = [];\n  resultsForPage: ParsingResults;\n  healingTargets: string[]\n  healingSources: string[]\n  castingTargets: string[]\n  meleeTargets: string[]\n  defenseSources: string[]\n\n\n  ngOnInit() {\n    this.buildEmptyForm();\n  }\n\n\n  buildEmptyForm() {\n    this.parsedLogForm = this.formBuilder.group({\n      combatDefenseSources: [''],\n\n      combatAttackSpellTargets: [''],\n\n      combatAttackMeleeTargets: [''],\n\n      healingSources: [''],\n      healingTargets: ['']\n    })\n  }\n\n  onFileUploaded(event: UploadEvent) {\n    let file = event.files[0];\n    this.parserService.sendFileToParse(file)\n      .subscribe(\n        (results: any) => {\n          let castedResults = results as ParsingResults;\n          alert(castedResults);\n        }\n      )\n  }\n\n  dropped(event: UploadEvent) {\n    this.files = event.files;\n    for (var file of event.files) {\n      file.fileEntry.file(info => {\n        console.log(info);\n      });\n    }\n  }\n\n  fileChange(event) {\n    let fileList: FileList = event.target.files;\n    let file = fileList[0];\n    this.parserService.sendFileToParse(file)\n      .subscribe(\n        (results: any) => {\n          let castedResults = results as ParsingResults;\n          if (castedResults) {\n            this.healingSources = castedResults.Healing.Sources;\n            this.healingTargets = castedResults.Healing.Targets;\n            this.castingTargets = castedResults.Combat.CasterAttack.Targets;\n            this.meleeTargets = castedResults.Combat.MeleeAttack.Targets;\n            this.defenseSources = castedResults.Combat.Defense.Sources;\n            this.resultsForPage = castedResults;\n            this.updateFormWithResults(castedResults);\n          }\n        }\n      )\n  }\n\n\n  updateFormWithResults(parsedResults: ParsingResults) {\n    this.parsedLogForm.patchValue({\n      combatDefenseSources: parsedResults.Combat.Defense.Sources,\n\n      combatAttackSpellTargets: parsedResults.Combat.CasterAttack.Targets,\n\n      combatAttackMeleeTargets: parsedResults.Combat.MeleeAttack.Targets,\n\n      healingSources: parsedResults.Healing.Sources,\n      healingTargets: parsedResults.Healing.Targets\n    })\n  }\n\n  currencyPrintHelper(currency_dict) {\n    let result_text = '';\n    if (currency_dict[0] > 0) {\n        result_text += currency_dict[0] + 'p ';\n    } \n    if (currency_dict[1] > 0) {\n        result_text += currency_dict[1] + 'g ';\n    }\n    if (currency_dict[2] > 0) {\n        result_text += currency_dict[2] + 's ';\n    }\n    if (currency_dict[3] > 0) {\n        result_text += currency_dict[3] + 'c';\n    }\n    return result_text\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { FileDropModule } from 'ngx-file-drop';\nimport { HttpModule } from '@angular/http';\n\nimport { ServicesModule } from './services/services.module'\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FileDropModule,\n    ServicesModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response, RequestOptionsArgs } from '@angular/http';\nimport { Observable, Subscription, Subject } from 'rxjs';\n\n@Injectable()\nexport class HttpService {\n\n  constructor(\n    private http: Http\n  ) { }\n\n  post(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\n    return this.handleRequest(this.http.post(url, body, options));\n  }\n\n  private handleRequest(request: Observable<Response>): Observable<Response> {\n\n    let responseSubject = new Subject<Response>();\n\n    let requestSubscription = request\n        .subscribe(r => {\n            responseSubject.next(r);\n        }, err => {\n            // this.handleError(err);\n            responseSubject.error(err);\n        }, () => {\n            responseSubject.complete();\n        });\n\n    // Do not expose the ISubscription portion of Subject\n    return responseSubject.asObservable();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/app/services/http.service.ts","import { Injectable } from '@angular/core';\nimport { Response, RequestOptions, Headers } from '@angular/http';\nimport { Observable, Subject } from 'rxjs';\n\nimport { HttpService } from './http.service';\n\n\n@Injectable()\nexport class ParserService {\n\n  constructor(\n    private httpService: HttpService\n  ) { }\n\n  sendFileToParse(file) : Observable<Response> {\n    let formData:FormData = new FormData();\n    formData.append('logfile', file, file.name);\n    let optHeaders = new Headers();\n    // optHeaders.append('Content-Type', 'multipart/form-data');\n    optHeaders.append('Accept', 'application/json');\n    let options = new RequestOptions({ headers: optHeaders});\n    return this.httpService.post('https://daoc-log-parse.herokuapp.com/upload', formData, options)\n    // return this.httpService.post('https://localhost:5000/upload', formData, options)\n      .map((response: Response) => {\n        let res = response.json();\n        return res;\n      });\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/app/services/parser.service.ts","import { NgModule } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\nimport { ParserService } from './parser.service';\r\n\r\n\r\n@NgModule({\r\n    providers: [\r\n        HttpService,\r\n        ParserService\r\n    ]\r\n})\r\nexport class ServicesModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/app/services/services.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/main.ts"],"sourceRoot":"webpack:///"}