{"version":3,"sources":["C:/Git/daoc-log-parser/src async","C:/Git/daoc-log-parser/src/app/app.component.css","C:/Git/daoc-log-parser/src/app/app.component.html","C:/Git/daoc-log-parser/src/app/app.component.ts","C:/Git/daoc-log-parser/src/app/app.module.ts","C:/Git/daoc-log-parser/src/app/services/http.service.ts","C:/Git/daoc-log-parser/src/app/services/parser.service.ts","C:/Git/daoc-log-parser/src/app/services/services.module.ts","C:/Git/daoc-log-parser/src/environments/environment.ts","C:/Git/daoc-log-parser/src/main.ts","C:/Git/daoc-log-parser/~/moment/locale ^\\.\\/.*$"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/daoc-log-parser/src async\n// module id = ../../../../../src async recursive\n// module chunks = 2","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/daoc-log-parser/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 2","module.exports = \"<div style=\\\"padding-left:4ch; padding-top: 4ch\\\">\\r\\n\\r\\n    <input type=\\\"file\\\" (change)=\\\"fileSelected($event)\\\" placeholder=\\\"Select log file\\\" accept=\\\".log, .txt\\\">\\r\\n    <p *ngIf=\\\"isParsing\\\" style=\\\"color:red\\\">Parsing...</p>\\r\\n    <div *ngIf=\\\"resultsForPage\\\">\\r\\n        <br/>\\r\\n        <br/>\\r\\n        <p>Results for logfile: {{logFileName}}</p>\\r\\n    </div>\\r\\n    <br/>\\r\\n    <br/>\\r\\n\\r\\n    <div id=\\\"instructions\\\" *ngIf=\\\"!resultsForPage\\\">\\r\\n        <h2>How to save a chatlog:</h2>\\r\\n        <ol>\\r\\n            <li>Enable chatlogs in game by using the command '/chatlog'</li>\\r\\n            <ul>\\r\\n                <li>This causes all text to be output to a file named 'chat.log', which by default is located at 'C:/Documents/Electronic\\r\\n                    Arts/Dark Age of Camelot</li>\\r\\n            </ul>\\r\\n            <li>You can write to a differently named file by using '/chatlog [name]' (Replace [name] with whatever you want to name the file)</li>\\r\\n            <ul>\\r\\n                <li>If the file [name].log exists, the game will open the file and append your chatlog to the end of it.</li>\\r\\n                <li>If the file [name].log doesn't exist, the game will create it for you</li>\\r\\n            </ul>\\r\\n            <li>Quitting to character screen, going link-dead, or typing /chatlog again will turn off the logging.</li>\\r\\n        </ol>\\r\\n    </div>\\r\\n\\r\\n    <mat-tab-group (selectedTabChange)=\\\"tabChange($event)\\\" *ngIf=\\\"resultsForPage\\\">\\r\\n        <mat-tab label=\\\"Combat\\\" [disabled]=\\\"!resultsIncludeCombat\\\">\\r\\n            <mat-accordion multi=\\\"true\\\" hideToggle=\\\"true\\\">\\r\\n                <div class=\\\"container-fluid\\\">\\r\\n                    <div class=\\\"panel-group\\\">\\r\\n                        <mat-expansion-panel id=\\\"healing-rvr\\\" *ngIf=\\\"resultsIncludeRvr\\\">\\r\\n                            <mat-expansion-panel-header>\\r\\n                                <h4>Summary</h4>\\r\\n                            </mat-expansion-panel-header>\\r\\n                            <div class=\\\"row panel-default panel\\\" *ngIf=\\\"resultsForPage.Combat.Healing.Delivered || resultsForPage.Combat.Healing.Received || resultsForPage.Combat.Healing.Lifetapped\\\">\\r\\n                                <div class=\\\"col-xs-2\\\" id=\\\"healing-summary\\\">\\r\\n                                    <h4>Healing</h4>\\r\\n                                    <table style=\\\"border-top:1px solid black;\\\">\\r\\n                                        <tr *ngIf=\\\"resultsForPage.Combat.Healing.Delivered\\\">\\r\\n                                            <td>\\r\\n                                                <strong>Delivered:</strong>\\r\\n                                            </td>\\r\\n                                            <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Healing.Delivered | number}}</td>\\r\\n                                        </tr>\\r\\n                                        <tr *ngIf=\\\"resultsForPage.Combat.Healing.Received\\\">\\r\\n                                            <td>\\r\\n                                                <strong>Received:</strong>\\r\\n                                            </td>\\r\\n                                            <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Healing.Received | number}}</td>\\r\\n                                        </tr>\\r\\n                                        <tr *ngIf=\\\"resultsForPage.Combat.Healing.Lifetapped\\\">\\r\\n                                            <td>\\r\\n                                                <strong>Lifetapped:</strong>\\r\\n                                            </td>\\r\\n                                            <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Healing.Lifetapped | number}}</td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-3\\\" id=\\\"healing-delivered\\\" *ngIf=\\\"resultsForPage.Combat.Healing.Targets.length\\\">\\r\\n                                    <thead>\\r\\n                                        <strong>Delivered breakdown:</strong>\\r\\n                                    </thead>\\r\\n                                    <div class=\\\"scrollTable\\\">\\r\\n                                        <table class=\\\"table-striped greenStriped\\\">\\r\\n                                            <tr>\\r\\n                                                <th></th>\\r\\n                                                <th style=\\\"text-align:center\\\">Count</th>\\r\\n                                                <th style=\\\"text-align:center\\\">Total</th>\\r\\n                                                <th style=\\\"text-align:center\\\">Max</th>\\r\\n                                            </tr>\\r\\n                                            <tr *ngFor=\\\"let target of resultsForPage.Combat.Healing.Targets\\\">\\r\\n                                                <td>\\r\\n                                                    {{target[0]}}\\r\\n                                                    <a *ngIf=\\\"checkIfNameIsPlayer(target[0])\\\" href=\\\"http://herald.uthgard.net/herald.php?view=stats&p1=player&p2=Player&p3=DESC&p5=Player&p6={{target[0]}}\\\"\\r\\n                                                        target=\\\"_blank\\\"> (herald)</a>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{target[1] | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{target[2] | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{target[3] | number}}</td>\\r\\n                                            </tr>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-3\\\" id=\\\"healing-received\\\" *ngIf=\\\"resultsForPage.Combat.Healing.Sources.length\\\">\\r\\n                                    <thead>\\r\\n                                        <strong>Received breakdown:</strong>\\r\\n                                    </thead>\\r\\n                                    <div class=\\\"scrollTable\\\">\\r\\n                                        <table class=\\\"table-striped greenStriped\\\">\\r\\n                                            <tr>\\r\\n                                                <th></th>\\r\\n                                                <th style=\\\"text-align:center\\\">Count</th>\\r\\n                                                <th style=\\\"text-align:center\\\">Total</th>\\r\\n                                                <th style=\\\"text-align:center\\\">Max</th>\\r\\n                                            </tr>\\r\\n                                            <tr *ngFor=\\\"let source of resultsForPage.Combat.Healing.Sources\\\">\\r\\n                                                <td>\\r\\n                                                    {{source[0]}}\\r\\n                                                    <a *ngIf=\\\"checkIfNameIsPlayer(source[0])\\\" href=\\\"http://herald.uthgard.net/herald.php?view=stats&p1=player&p2=Player&p3=DESC&p5=Player&p6={{source[0]}}\\\"\\r\\n                                                        target=\\\"_blank\\\"> (herald)</a>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{source[1] | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{source[2] | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{source[3] | number}}</td>\\r\\n                                            </tr>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <div class=\\\"row panel-default panel\\\" *ngIf=\\\"resultsForPage.Combat.Summary.RPs || resultsForPage.Combat.Summary.Deaths\\\">\\r\\n                                <div class=\\\"col-xs-2\\\" id=\\\"rvr-summary\\\">\\r\\n                                    <h4>RvR</h4>\\r\\n                                    <table style=\\\"border-top:1px solid black;\\\">\\r\\n                                        <tr>\\r\\n                                            <td>\\r\\n                                                <strong>Deaths:</strong>\\r\\n                                            </td>\\r\\n                                            <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Summary.Deaths | number}}</td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td>\\r\\n                                                <strong>RPs:</strong>\\r\\n                                            </td>\\r\\n                                            <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Summary.RPs | number}}</td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td>\\r\\n                                                <strong>Deathblows:</strong>\\r\\n                                            </td>\\r\\n                                            <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Summary.DeathblowCount | number}}</td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-2\\\" *ngIf=\\\"resultsForPage.Combat.Summary.DeathblowCount > 0\\\">\\r\\n                                    <thead>\\r\\n                                        <strong>Deathblow list:</strong>\\r\\n                                    </thead>\\r\\n                                    <div class=\\\"scrollTable\\\" id=\\\"deathblow-list\\\" style=\\\"max-height:140px\\\">\\r\\n                                        <table class=\\\"table-striped greenStriped\\\">\\r\\n                                            <tr *ngFor=\\\"let db of resultsForPage.Combat.Summary.DeathBlows\\\">\\r\\n                                                <td>\\r\\n                                                    {{db[0]}}\\r\\n                                                    <a *ngIf=\\\"checkIfNameIsPlayer(db[0])\\\" href=\\\"http://herald.uthgard.net/herald.php?view=stats&p1=player&p2=Player&p3=DESC&p5=Player&p6={{db[0]}}\\\"\\r\\n                                                        target=\\\"_blank\\\"> (herald)</a>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{db[1] | number}}</td>\\r\\n                                            </tr>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-expansion-panel>\\r\\n                        <mat-expansion-panel id=\\\"physical-caster-attack\\\">\\r\\n                            <mat-expansion-panel-header>\\r\\n                                <h4>Offense</h4>\\r\\n                            </mat-expansion-panel-header>\\r\\n                            <div class=\\\"row panel-default panel\\\">\\r\\n                                <h4 class=\\\"panel-heading\\\">Physical Attack</h4>\\r\\n                                <div class=\\\"panel-body\\\">\\r\\n                                    <div class=\\\"col-xs-2\\\" id=\\\"physical-summary\\\">\\r\\n                                        <h4>\\r\\n                                            <strong>Summary:</strong>\\r\\n                                        </h4>\\r\\n                                        <table class=\\\"table-striped blueStriped\\\">\\r\\n                                            <tr>\\r\\n                                                <td></td>\\r\\n                                                <th style=\\\"text-align:center\\\">Count</th>\\r\\n                                                <th style=\\\"text-align:center\\\">Percent</th>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.PhysicalAttack.Hits\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Hit:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Hits | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Percents.Hits | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.PhysicalAttack.Blocks\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Blocked:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Blocks | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Percents.Blocks | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.PhysicalAttack.Parries\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Parried:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Parries | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Percents.Parries | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.PhysicalAttack.Evades\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Evaded:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Evades | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Percents.Evades | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.PhysicalAttack.Misses\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Missed:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Misses | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Percents.Misses | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.PhysicalAttack.Bladeturns\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Bladeturned:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Bladeturns | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Percents.Bladeturns | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.PhysicalAttack.Fumbles\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Fumbled:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Fumbles | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Percents.Fumbles | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr>\\r\\n                                                <td>\\r\\n                                                    <strong>Total Attacks:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.TotalAttacks | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                            <tr>\\r\\n                                                <td>\\r\\n                                                    <strong>Base Dmg:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.BaseDamage | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.PhysicalAttack.Absorbed\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Dmg Absorbed:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Absorbed | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.PhysicalAttack.Crits\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Crits:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Crits | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Percents.Crits | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.PhysicalAttack.Crits\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Crit Dmg:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.CritDamage | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.PhysicalAttack.Procs\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Procs:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Procs | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.Percents.Procs | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.PhysicalAttack.Procs\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Proc Dmg:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.ProcDamage | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                            <tr>\\r\\n                                                <td>\\r\\n                                                    <strong>Total Dmg:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.PhysicalAttack.TotalDamage | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-6\\\" id=\\\"physical-target-breakdown\\\">\\r\\n                                        <div *ngIf=\\\"resultsForPage.Combat.PhysicalAttack.Targets.length\\\">\\r\\n                                            <h4>\\r\\n                                                <strong>Targets:</strong>\\r\\n                                            </h4>\\r\\n                                            <div class=\\\"scrollTable\\\" style=\\\"max-height:200px\\\">\\r\\n                                                <table class=\\\"table-striped greenStriped\\\">\\r\\n                                                    <tr>\\r\\n                                                        <th></th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Hits</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Blocks</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Parries</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Evades</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Crits</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Crit Dmg</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Procs</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Proc Dmg</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Min</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Max</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Total Dmg</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Avg</th>\\r\\n                                                    </tr>\\r\\n                                                    <tr *ngFor=\\\"let dmgTarget of resultsForPage.Combat.PhysicalAttack.Targets\\\">\\r\\n                                                        <td>\\r\\n                                                            {{dmgTarget[0]}}\\r\\n                                                            <a *ngIf=\\\"checkIfNameIsPlayer(dmgTarget[0])\\\" href=\\\"http://herald.uthgard.net/herald.php?view=stats&p1=player&p2=Player&p3=DESC&p5=Player&p6={{dmgTarget[0]}}\\\"\\r\\n                                                                target=\\\"_blank\\\"> (herald)</a>\\r\\n                                                        </td>\\r\\n                                                        <td *ngFor=\\\"let stat of dmgTarget.slice(1)\\\" style=\\\"text-align:center; border-left:1px black solid\\\">\\r\\n                                                            {{stat | number}}\\r\\n                                                        </td>\\r\\n                                                        <td style=\\\"text-align:center; border-left:1px black solid\\\">{{dmgTarget[11]/dmgTarget[1] | number:'.0-0'}}</td>\\r\\n                                                    </tr>\\r\\n                                                </table>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <br/>\\r\\n                                        <div id=\\\"physical-weapon-stats\\\" *ngIf=\\\"resultsForPage.Combat.PhysicalAttack.WeaponStats.length\\\">\\r\\n                                            <h4>\\r\\n                                                <strong>Weapon Stats:</strong>\\r\\n                                            </h4>\\r\\n                                            <div class=\\\"scrollTable\\\">\\r\\n                                                <table class=\\\"table-striped greenStriped\\\">\\r\\n                                                    <tr>\\r\\n                                                        <th></th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Count</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Crits</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Crit Dmg</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Procs</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Proc Dmg</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Min Dmg</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Max Dmg</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Total Dmg</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Avg</th>\\r\\n\\r\\n                                                    </tr>\\r\\n                                                    <tr *ngFor=\\\"let style of resultsForPage.Combat.PhysicalAttack.WeaponStats\\\">\\r\\n                                                        <td>{{style[0]}}</td>\\r\\n                                                        <td *ngFor=\\\"let stat of style.slice(1)\\\" style=\\\"text-align:center; border-left:1px black solid\\\">\\r\\n                                                            {{stat | number}}\\r\\n                                                        </td>\\r\\n                                                        <td style=\\\"text-align:center; border-left:1px black solid\\\">\\r\\n                                                            {{style[8]/style[1] | number:'.0-0'}}\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                </table>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-4\\\" id=\\\"physical-style-weapon-stats\\\">\\r\\n                                        <div id=\\\"physical-style-stats\\\" *ngIf=\\\"resultsForPage.Combat.PhysicalAttack.StyleStats.length\\\">\\r\\n                                            <h4>\\r\\n                                                <strong>Style Stats:</strong>\\r\\n                                            </h4>\\r\\n                                            <table class=\\\"table-striped greenStriped\\\">\\r\\n                                                <tr>\\r\\n                                                    <th></th>\\r\\n                                                    <th style=\\\"text-align:center\\\">Count</th>\\r\\n                                                    <th style=\\\"text-align:center\\\">Avg (+Dmg)</th>\\r\\n                                                    <th style=\\\"text-align:center\\\">Min Dmg</th>\\r\\n                                                    <th style=\\\"text-align:center\\\">Max Dmg</th>\\r\\n                                                    <th style=\\\"text-align:center\\\">Total Dmg</th>\\r\\n                                                    <th style=\\\"text-align:center\\\">Avg Dmg</th>\\r\\n                                                </tr>\\r\\n                                                <tr *ngFor=\\\"let style of resultsForPage.Combat.PhysicalAttack.StyleStats\\\">\\r\\n                                                    <td>{{style[0]}}</td>\\r\\n                                                    <td *ngFor=\\\"let stats of style.slice(1)\\\" style=\\\"text-align:center; border-left:1px black solid\\\">\\r\\n                                                        {{stats | number}}\\r\\n                                                    </td>\\r\\n                                                    <td style=\\\"text-align:center; border-left:1px black solid\\\">{{style[5]/style[1] | number:'.0-0'}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row panel panel-default\\\">\\r\\n                                <h3 class=\\\"panel-heading\\\">Caster Attack</h3>\\r\\n                                <div class=\\\"panel-body\\\">\\r\\n                                    <div class=\\\"col-xs-2\\\" id=\\\"caster-summary\\\">\\r\\n                                        <h4>\\r\\n                                            <strong>Summary:</strong>\\r\\n                                        </h4>\\r\\n                                        <table class=\\\"table-striped blueStriped\\\">\\r\\n                                            <tr>\\r\\n                                                <th></th>\\r\\n                                                <th style=\\\"text-align:center\\\">\\r\\n                                                    <strong>Count</strong>\\r\\n                                                </th>\\r\\n                                                <th style=\\\"text-align:center\\\">\\r\\n                                                    <strong>Percent</strong>\\r\\n                                                </th>\\r\\n                                            </tr>\\r\\n                                            <tr>\\r\\n                                                <td>\\r\\n                                                    <strong>Landed:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.CasterAttack.Landed | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.CasterAttack.Percents.Landed | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr>\\r\\n                                                <td>\\r\\n                                                    <strong>Resisted:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.CasterAttack.Resists | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.CasterAttack.Percents.Resists | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr>\\r\\n                                                <td>\\r\\n                                                    <strong>Total Attacks:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.CasterAttack.TotalAttacks | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                            <tr>\\r\\n                                                <td>\\r\\n                                                    <strong>Base Dmg:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.CasterAttack.BaseDamage | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                            <tr>\\r\\n                                                <td>\\r\\n                                                    <strong>Crits:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.CasterAttack.Crits | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.CasterAttack.Percents.Crits | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr>\\r\\n                                                <td>\\r\\n                                                    <strong>Crit Dmg:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.CasterAttack.CritDamage | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                            <tr>\\r\\n                                                <td>\\r\\n                                                    <strong>Total Dmg:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.CasterAttack.TotalDamage | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-5\\\" id=\\\"caster-damage-breakdown\\\">\\r\\n                                        <div *ngIf=\\\"resultsForPage.Combat.CasterAttack.Targets.length\\\">\\r\\n                                            <h4>\\r\\n                                                <strong>Targets:</strong>\\r\\n                                            </h4>\\r\\n                                            <div class=\\\"scrollTable\\\">\\r\\n                                                <table class=\\\"table-striped greenStriped\\\">\\r\\n                                                    <tr>\\r\\n                                                        <th></th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Landed</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Resisted</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Crit</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Crit Dmg</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Min Dmg</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Max Dmg</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Total Dmg</th>\\r\\n                                                    </tr>\\r\\n                                                    <tr *ngFor=\\\"let dmgTarget of resultsForPage.Combat.CasterAttack.Targets\\\">\\r\\n                                                        <td>\\r\\n                                                            {{dmgTarget[0]}}\\r\\n                                                            <a *ngIf=\\\"checkIfNameIsPlayer(dmgTarget[0])\\\" href=\\\"http://herald.uthgard.net/herald.php?view=stats&p1=player&p2=Player&p3=DESC&p5=Player&p6={{dmgTarget[0]}}\\\"\\r\\n                                                                target=\\\"_blank\\\"> (herald)</a>\\r\\n                                                        </td>\\r\\n                                                        <td *ngFor=\\\"let stat of dmgTarget.slice(1)\\\" style=\\\"text-align:center; border-left:1px black solid\\\">\\r\\n                                                            {{stat | number}}\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                </table>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-5\\\" id=\\\"caster-spell-stats\\\">\\r\\n                                        <div *ngIf=\\\"resultsForPage.Combat.CasterAttack.SpellStats.length > 0\\\">\\r\\n                                            <h4>\\r\\n                                                <strong>Spell Stats:</strong>\\r\\n                                            </h4>\\r\\n                                            <div class=\\\"scrollTable\\\" style=\\\"max-height:160px\\\">\\r\\n                                                <table class=\\\"table-striped greenStriped\\\">\\r\\n                                                    <tr>\\r\\n                                                        <th></th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Landed</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Resisted</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Crit</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Crit Dmg</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Min Dmg</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Max Dmg</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Total Dmg</th>\\r\\n                                                    </tr>\\r\\n                                                    <tr *ngFor=\\\"let spell of resultsForPage.Combat.CasterAttack.SpellStats\\\">\\r\\n                                                        <td>{{spell[0]}}</td>\\r\\n                                                        <td *ngFor=\\\"let stat of spell.slice(1)\\\" style=\\\"text-align:center; border-left:1px black solid\\\">\\r\\n                                                            {{stat | number}}\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                </table>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <div class=\\\"row panel panel-default\\\" *ngIf=\\\"resultsForPage.Combat.CasterAttack.TotalAttacks || resultsForPage.Combat.PhysicalAttack.TotalAttacks\\\">\\r\\n                                <h4 class=\\\"panel-heading\\\">DPS Graph (Average damage per attack: {{resultsForPage.Combat.DPS | number:'.0-2'}})</h4>\\r\\n                                <p style=\\\"color:red\\\">Clicking on a bar will copy the timestamp to your clipboard, making it easier to find the events in your log file</p>\\r\\n                                <div class=\\\"col-md-12 panel-body\\\">\\r\\n                                    <div style=\\\"display:block;\\\">\\r\\n                                        <canvas baseChart height=\\\"60\\\"\\r\\n                                            [datasets]=\\\"dpsChartData\\\"\\r\\n                                            [labels]=\\\"dpsChartLabels\\\"\\r\\n                                            [options]=\\\"dpsChartOptions\\\"\\r\\n                                            [chartType]=\\\"'bar'\\\"\\r\\n                                            [colors]=\\\"dpsChartColors\\\"\\r\\n                                            [legend]=\\\"dpsLegend\\\"\\r\\n                                            (chartClick)=\\\"dpsChartClicked($event)\\\"></canvas>\\r\\n                                    </div>\\r\\n                                    <!-- <ngx-charts-bar-vertical\\r\\n                                        [results]=\\\"dpsChartData\\\"\\r\\n                                        [yAxis]=\\\"'true'\\\"\\r\\n                                        [xAxis]=\\\"'true'\\\"\\r\\n                                        [barPadding]=\\\"0\\\"\\r\\n                                        [showXAxisLabel]=\\\"'true'\\\">\\r\\n                                    </ngx-charts-bar-vertical> -->\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-expansion-panel>\\r\\n                        <mat-expansion-panel id=\\\"defense\\\">\\r\\n                            <mat-expansion-panel-header>\\r\\n                                <h4>Defense</h4>\\r\\n                            </mat-expansion-panel-header>\\r\\n                            <div class=\\\"row panel panel-default\\\">\\r\\n                                <div class=\\\"panel-body\\\">\\r\\n                                    <div class=\\\"col-xs-2\\\" id=\\\"defense-summary\\\">\\r\\n                                        <h4>\\r\\n                                            <strong>Summary:</strong>\\r\\n                                        </h4>\\r\\n                                        <table class=\\\"table-striped blueStriped\\\">\\r\\n                                            <tr>\\r\\n                                                <th></th>\\r\\n                                                <th style=\\\"text-align: center\\\">\\r\\n                                                    <strong>Count</strong>\\r\\n                                                </th>\\r\\n                                                <th style=\\\"text-align: center\\\">\\r\\n                                                    <strong>Percent</strong>\\r\\n                                                </th>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.Defense.Hits\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Hits:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Hits | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Percents.Hits | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.Defense.Blocks\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Blocks:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Blocks | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Percents.Blocks | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.Defense.Parries\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Parries:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Parries | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Percents.Parries | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.Defense.Evades\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Evades:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Evades | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Percents.Evades | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.Defense.Misses\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Misses:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Misses | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Percents.Misses | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.Defense.Intercepts\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Intercepts:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Intercepts | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Percents.Intercepts | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr>\\r\\n                                                <td>\\r\\n                                                    <strong>Tot Physical Attacks:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.TotalPhysicalAttacks | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.Defense.Crits\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Crits:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Crits | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.Defense.Crits\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Crit Dmg:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.CritDamage | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.Defense.PhysicalDamage\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Physical Dmg:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.PhysicalDamage | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.Defense.Absorbed\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Dmg Absorbed:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Absorbed | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.Defense.SpellsLanded\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Spells/Procs:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.SpellsLanded | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Percents.SpellsLanded | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.Defense.Resists\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Resists:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Resists | number}}</td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Percents.Resists | percent}}</td>\\r\\n                                            </tr>\\r\\n                                            <tr>\\r\\n                                                <td>\\r\\n                                                    <strong>Tot Magic Attacks:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.TotalSpellAttacks | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.Defense.SpellDamage\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Spell Dmg:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.SpellDamage | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                            <tr>\\r\\n                                                <td>\\r\\n                                                    <strong>Total Dmg:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.TotalDamage | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.Defense.Guarding_Blocked\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Guarding Blocks:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Guarding_Blocked | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                            <tr *ngIf=\\\"resultsForPage.Combat.Defense.Guarded_Blocked\\\">\\r\\n                                                <td>\\r\\n                                                    <strong>Guarded Blocks:</strong>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"text-align:center\\\">{{resultsForPage.Combat.Defense.Guarded_Blocked | number}}</td>\\r\\n                                                <td></td>\\r\\n                                            </tr>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-5\\\" id=\\\"defense-damage-breakdown\\\">\\r\\n                                        <div *ngIf=\\\"resultsForPage.Combat.Defense.Sources.length\\\">\\r\\n                                            <h4>\\r\\n                                                <strong>Damage Sources:</strong>\\r\\n                                            </h4>\\r\\n                                            <div class=\\\"scrollTable\\\" style=\\\"max-height:320px\\\">\\r\\n                                                <table class=\\\"table-striped greenStriped\\\">\\r\\n                                                    <tr>\\r\\n                                                        <th></th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Attacks</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Hits</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Blocks</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Parries</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Evades</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Misses</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Crits</th>\\r\\n                                                        <th style=\\\"text-align:center\\\">Damage</th>\\r\\n                                                    </tr>\\r\\n                                                    <tr *ngFor=\\\"let dmgSource of resultsForPage.Combat.Defense.Sources\\\">\\r\\n                                                        <td>\\r\\n                                                            {{dmgSource[0]}}\\r\\n                                                            <a *ngIf=\\\"checkIfNameIsPlayer(dmgSource[0])\\\" href=\\\"http://herald.uthgard.net/herald.php?view=stats&p1=player&p2=Player&p3=DESC&p5=Player&p6={{dmgSource[0]}}\\\"\\r\\n                                                                target=\\\"_blank\\\"> (herald)</a>\\r\\n                                                        </td>\\r\\n\\r\\n                                                        <td *ngFor=\\\"let stat of dmgSource.slice(1)\\\" style=\\\"text-align:center; border-left:1px black solid\\\">\\r\\n                                                            {{stat | number}}\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                </table>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-2\\\" id=\\\"defense-armor-hits\\\">\\r\\n                                        <div *ngIf=\\\"resultsForPage.Combat.Defense.Hits > 0\\\">\\r\\n                                            <h4>\\r\\n                                                <strong>Armor Hits:</strong>\\r\\n                                            </h4>\\r\\n                                            <table class=\\\"table-striped greenStriped\\\">\\r\\n                                                <tr>\\r\\n                                                    <th></th>\\r\\n                                                    <th style=\\\"text-align:center\\\">Hits</th>\\r\\n                                                    <th style=\\\"text-align:center\\\">Percent</th>\\r\\n                                                    <th style=\\\"text-align:center\\\">Damage</th>\\r\\n                                                </tr>\\r\\n                                                <tr *ngFor=\\\"let armor of resultsForPage.Combat.Defense.ArmorHits\\\">\\r\\n                                                    <td>{{armor[0]}}</td>\\r\\n                                                    <td style=\\\"text-align:center\\\">{{armor[1] | number}}</td>\\r\\n                                                    <td style=\\\"text-align:center\\\">{{(armor[1]/resultsForPage.Combat.Defense.Hits) | percent:'.0-2'}}</td>\\r\\n                                                    <td style=\\\"text-align:center\\\">{{armor[2] | number}}</td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-expansion-panel>\\r\\n                        <div id=\\\"errors\\\" class=\\\"col-xs-4 row panel-default panel\\\" *ngIf=\\\"errorMessageList.length > 0\\\">\\r\\n                            <h3 class=\\\"panel-heading\\\">Parsing Errors</h3>\\r\\n                            <div class=\\\"panel-body\\\">\\r\\n                                <ul>\\r\\n                                    <li *ngFor=\\\"let todo of errorMessageList\\\">{{todo}}</li>\\r\\n                                </ul>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"example-container mat-elevation-z8\\\">\\r\\n                    <mat-table #table [dataSource]=\\\"matTableTest\\\">\\r\\n                        <ng-container matColumnDef=\\\"name\\\">\\r\\n                            <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n                            <mat-cell *matCellDef=\\\"let target\\\">{{target[0]}}</mat-cell>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\\\"hits\\\">\\r\\n                            <mat-header-cell *matHeaderCellDef>Hits</mat-header-cell>\\r\\n                            <mat-cell *matCellDef=\\\"let target\\\">{{target[1]}}</mat-cell>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\\\"blocks\\\">\\r\\n                            <mat-header-cell *matHeaderCellDef>Blocks</mat-header-cell>\\r\\n                            <mat-cell *matCellDef=\\\"let target\\\">{{target[2]}}</mat-cell>\\r\\n                        </ng-container>\\r\\n\\r\\n                        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n                        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n                    </mat-table>\\r\\n                </div> -->\\r\\n                <!-- <div class=\\\"example-container mat-elevation-z8\\\">\\r\\n                    <mat-table #table [dataSource]=\\\"matTableTest\\\">\\r\\n                        <ng-container matColumnDef=\\\"{{header}}\\\" *ngFor=\\\"let header of displayedColumns; let i = index\\\">\\r\\n                            <mat-header-cell *matHeaderCellDef>{{header}}</mat-header-cell>\\r\\n                            <mat-cell *matCellDef=\\\"let target\\\">{{target[i] | number}}</mat-cell>\\r\\n                        </ng-container>\\r\\n\\r\\n\\r\\n                        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n                        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n                    </mat-table>\\r\\n                </div> -->\\r\\n            </mat-accordion>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Money & Loot\\\" [disabled]=\\\"(resultsForPage.PvE.Drops.length == 0 && !resultsIncludeMoney)\\\">\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"resultsIncludeMoney\\\">\\r\\n                <div class=\\\"col-xs-2\\\" id=\\\"money-summary\\\">\\r\\n                    <h4>Money</h4>\\r\\n                    <table style=\\\"border-top:1px solid black;\\\">\\r\\n                        <tr *ngIf=\\\"currencyPrintHelper(resultsForPage.PvE.Monies.Loot) != ''\\\">\\r\\n                            <td>\\r\\n                                <strong>Looted:</strong>\\r\\n                            </td>\\r\\n                            <td style=\\\"text-align:center\\\">{{currencyPrintHelper(resultsForPage.PvE.Monies.Loot)}}</td>\\r\\n                        </tr>\\r\\n                        <tr *ngIf=\\\"currencyPrintHelper(resultsForPage.PvE.Monies.Expense) != ''\\\">\\r\\n                            <td>\\r\\n                                <strong>Expenses:</strong>\\r\\n                            </td>\\r\\n                            <td style=\\\"text-align:center\\\">{{currencyPrintHelper(resultsForPage.PvE.Monies.Expense)}}</td>\\r\\n                        </tr>\\r\\n                        <tr *ngIf=\\\"currencyPrintHelper(resultsForPage.PvE.Monies.Income) != ''\\\">\\r\\n                            <td>\\r\\n                                <strong>Income:</strong>\\r\\n                            </td>\\r\\n                            <td style=\\\"text-align:center\\\">{{currencyPrintHelper(resultsForPage.PvE.Monies.Income)}}</td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n            <br/>\\r\\n            <br/>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"container-fluid\\\">\\r\\n                    <div class=\\\"col-sm-3 panel-default panel\\\" *ngFor=\\\"let mobs of resultsForPage.PvE.Drops\\\">\\r\\n                        <h4 class=\\\"panel-header\\\">{{mobs[0]}} (Kills: {{mobs[1]}})</h4>\\r\\n                        <table class=\\\"table-striped bluestriped panel-body\\\">\\r\\n                            <tr>\\r\\n                                <th>Item</th>\\r\\n                                <th style=\\\"text-align: center\\\">Count</th>\\r\\n                                <th style=\\\"text-align: center\\\">Rate</th>\\r\\n                            </tr>\\r\\n                            <tr *ngFor=\\\"let drop of mobs[2]\\\">\\r\\n                                <td>{{drop[0]}}</td>\\r\\n                                <td style=\\\"text-align: center\\\">{{drop[1]}}</td>\\r\\n                                <td style=\\\"text-align: center\\\">{{drop[1]/mobs[1] | percent:'.0-0'}}</td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"XP\\\" [disabled]=\\\"resultsForPage.PvE.XP.length == 0\\\">\\r\\n            <!-- <ngx-charts-area-chart-stacked\\r\\n                [results]=\\\"xpChartData\\\" \\r\\n                [yAxis]=\\\"'true'\\\"\\r\\n                [xAxis]=\\\"'true'\\\"\\r\\n                [legend]=\\\"'true'\\\"\\r\\n                [scheme]=\\\"xpChartColors\\\">\\r\\n            </ngx-charts-area-chart-stacked> -->\\r\\n            <ngx-charts-bar-vertical-stacked\\r\\n                [results]=\\\"xpChartData\\\" \\r\\n                [yAxis]=\\\"'true'\\\"\\r\\n                [xAxis]=\\\"xpShowXAxis\\\"\\r\\n                [legend]=\\\"'true'\\\"\\r\\n                [scheme]=\\\"xpChartColors\\\"\\r\\n                [barPadding]=\\\"1\\\">\\r\\n            </ngx-charts-bar-vertical-stacked>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Crafting\\\" [disabled]=\\\"resultsForPage.Crafting.Series.length == 0\\\">\\r\\n            <ngx-charts-bar-vertical-2d \\r\\n                [results]=\\\"craftingChartData\\\" \\r\\n                [legend]=\\\"'true'\\\"\\r\\n                [legendTitle]=\\\"'Items'\\\"\\r\\n                [yAxis]=\\\"'true'\\\"\\r\\n                [xAxis]=\\\"'true'\\\"\\r\\n                [groupPadding]=\\\"12\\\"\\r\\n                [barPadding]=\\\"1\\\"\\r\\n                [showXAxisLabel]=\\\"'true'\\\">\\r\\n            </ngx-charts-bar-vertical-2d>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Log File\\\" *ngIf=\\\"currentlyParsedFile\\\" style=\\\"height:100%\\\">\\r\\n            <button type=\\\"button\\\" (click)=\\\"showLogFile()\\\" *ngIf=\\\"!showingLogFile\\\">Show log file</button>\\r\\n            <textarea *ngIf=\\\"logFileContent\\\" class=\\\"panel panel-default\\\" readonly=\\\"true\\\" style=\\\"width:100%; height:700px\\\">\\r\\n                {{logFileContent}}\\r\\n            </textarea>\\r\\n        </mat-tab>\\r\\n    </mat-tab-group>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/daoc-log-parser/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 2","import { Component, OnInit, Input, HostListener } from '@angular/core';\r\nimport { ParserService } from './services/parser.service';\r\n\r\nimport { ParsingResults } from '../models/parse-results.model';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { containerEnd } from '@angular/core/src/render3/instructions';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  \r\n  TODO = \r\n    [\r\n     'Guard blocks',\r\n     'Guarded blocks',\r\n     'Pet intercepts'\r\n    ];\r\n\r\n  fileExt: string[] = [\"txt, log\"];\r\n  API_VERSION = 'v2.0';\r\n\r\n  constructor(\r\n    private parserService: ParserService\r\n  ) {}\r\n\r\n  resultsForPage: ParsingResults;\r\n\r\n\r\n\r\n  dpsChartData:Array<any> = [];\r\n  dpsChartLabels:Array<any> = [];\r\n  dpsChartOptions:any = {\r\n    scaleShowVerticalLines: true,\r\n    responsive: true\r\n  };\r\n  dpsChartColors:Array<any> = [\r\n    {\r\n      backgroundColor: '#4286f4',\r\n      borderColor: '#4286f4',\r\n      pointBackgroundColor: 'rgba(148,159,177,1)',\r\n      pointBorderColor: '#fff',\r\n      pointHoverBackgroundColor: '#fff',\r\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n    }\r\n  ]\r\n  dpsLegend: boolean = false;\r\n\r\n\r\n  craftingChartData: any[] = [];\r\n  craftingLabels:Array<any> = ['Fail', '94', '95', '96', '97', '98', '99', '100'];\r\n\r\n\r\n  xpChartData: any[] = [];\r\n  xpChartColors = {\r\n    domain: ['#156489','#b57506','#dd8e07','#f8ac29','#fac364','#fbd491','#fde5bd','#dc0d0e']\r\n  }\r\n  xpShowXAxis = true;\r\n\r\n\r\n  errorMessageList = [];\r\n  isParsing = false;\r\n  logFileName = '';\r\n  logFileContent = '';\r\n  showingLogFile = false;\r\n\r\n  currentlyParsedFile: File;\r\n\r\n  resultsIncludeCombat = false;\r\n  resultsIncludeMoney = false;\r\n  resultsIncludeRvr = false;\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  pushDataToCharts(castedResults: ParsingResults) {\r\n    this.dpsChartData = [{data: castedResults.Combat.ChartData.Values, label:'Total Dmg'}];\r\n    setTimeout(() => {this.dpsChartLabels = castedResults.Combat.ChartData.Labels;}, 50);\r\n\r\n    let tmpData = [];\r\n    for (var i = 0; i < this.craftingLabels.length; i++) {\r\n      let series = []\r\n      for (var x = 0; x < castedResults.Crafting.Series.length; x++) {\r\n        series.push( {\r\n          \"name\": castedResults.Crafting.Series[x],\r\n          \"value\": castedResults.Crafting.Values[x][i]\r\n        })\r\n      }\r\n      tmpData.push( {\r\n        \"name\": this.craftingLabels[i],\r\n        \"series\": series\r\n      })\r\n    }\r\n\r\n    this.craftingChartData = tmpData;\r\n\r\n    this.xpChartData = castedResults.PvE.XP;\r\n    this.xpShowXAxis = castedResults.PvE.XP.length < 75;\r\n  }\r\n\r\n  checkResultsForCombat(castedResults: ParsingResults) {\r\n    let hasPhysical = castedResults.Combat.PhysicalAttack.TotalAttacks > 0;\r\n    let hasCasting = castedResults.Combat.CasterAttack.TotalAttacks > 0;\r\n    let hasDefense = castedResults.Combat.Defense.TotalAttacks > 0;\r\n    let hasHealing = this.checkResultsForRvr(castedResults);\r\n\r\n    return hasPhysical || hasCasting || hasDefense || hasHealing;\r\n  }\r\n\r\n  checkResultsForMoney(castedResults: ParsingResults) {\r\n    let hasMoneyValue = false;\r\n    castedResults.PvE.Monies.Loot.forEach(denom => {\r\n      if (denom) {\r\n        hasMoneyValue = true;\r\n      }\r\n    })\r\n\r\n    if (hasMoneyValue) {\r\n      return true;\r\n    }\r\n\r\n    castedResults.PvE.Monies.Expense.forEach(denom => {\r\n      if (denom) {\r\n        hasMoneyValue = true;\r\n      }\r\n    })\r\n\r\n    if (hasMoneyValue) {\r\n      return true;\r\n    }\r\n\r\n    castedResults.PvE.Monies.Income.forEach(denom => {\r\n      if (denom) {\r\n        hasMoneyValue = true;\r\n      }\r\n    })\r\n\r\n    return hasMoneyValue;\r\n\r\n  }\r\n\r\n  checkResultsForRvr(castedResults: ParsingResults) {\r\n    let containsHealing = castedResults.Combat.Healing.Delivered > 0\r\n      || castedResults.Combat.Healing.Received > 0\r\n      || castedResults.Combat.Healing.Lifetapped > 0;\r\n\r\n    let containsDeathRpsKills = castedResults.Combat.Summary.Deaths > 0\r\n      || castedResults.Combat.Summary.RPs > 0\r\n      || castedResults.Combat.Summary.DeathblowCount > 0;\r\n\r\n    return containsHealing || containsDeathRpsKills;\r\n  }\r\n\r\n  currencyPrintHelper(currency_dict) {\r\n    let result_text = '';\r\n    if (currency_dict[0] > 0) {\r\n        result_text += currency_dict[0] + 'p ';\r\n    } \r\n    if (currency_dict[1] > 0) {\r\n        result_text += currency_dict[1] + 'g ';\r\n    }\r\n    if (currency_dict[2] > 0) {\r\n        result_text += currency_dict[2] + 's ';\r\n    }\r\n    if (currency_dict[3] > 0) {\r\n        result_text += currency_dict[3] + 'c';\r\n    }\r\n    return result_text\r\n  }\r\n\r\n  dpsChartClicked(ev: any) {\r\n    let ts = this.dpsChartLabels[ev.active[0]._index];\r\n    console.log(ts)\r\n    document.addEventListener('copy', (e: ClipboardEvent) => {\r\n      e.clipboardData.setData('text/plain', ts);\r\n      e.preventDefault();\r\n      // document.removeEventListener('copy');\r\n    });\r\n    document.execCommand('copy');\r\n    // console.log(ev)\r\n  }\r\n\r\n  checkIfNameIsPlayer(name: string) {\r\n    if (name.indexOf(' ') > -1) {\r\n      return false;\r\n    }\r\n\r\n    if (name[0] != name[0].toUpperCase()) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  tabChange(event: MatTabChangeEvent) {\r\n    if (event.tab.textLabel == 'Crafting' || event.tab.textLabel == 'XP') {\r\n      window.dispatchEvent(new Event('resize'));\r\n    }\r\n  }\r\n\r\n  fileSelected(event) {\r\n    this.showingLogFile = false;\r\n    this.logFileContent = '';\r\n    let fileList: FileList = event.target.files;\r\n    if (fileList.length > 0) {\r\n      this.currentlyParsedFile = fileList[0];\r\n      this.logFileName = this.currentlyParsedFile.name;\r\n      this.isParsing = true;\r\n      this.parserService.sendFileToParse(this.currentlyParsedFile, this.API_VERSION)\r\n        .subscribe(\r\n          (results: any) => {\r\n            this.isParsing = false;\r\n            if (results['Errors']) {\r\n              alert('This page is out of date. Please refresh the page and try again. \\rWindows key combination: Ctrl + F5')\r\n            }\r\n            else {\r\n              let messages = results['Messages']\r\n              if (messages) {\r\n                this.errorMessageList = messages;\r\n              }\r\n              let castedResults = results as ParsingResults;\r\n              if (castedResults) {\r\n                this.resultsForPage = castedResults;\r\n                this.pushDataToCharts(castedResults);\r\n                this.resultsIncludeCombat = this.checkResultsForCombat(castedResults);\r\n                this.resultsIncludeMoney = this.checkResultsForMoney(castedResults);\r\n                this.resultsIncludeRvr = this.checkResultsForRvr(castedResults);\r\n              }\r\n            }\r\n          },\r\n          (error: any) => {\r\n            alert('Error parsing your log file. Please try again. If the problem persists, please contact system admin.');\r\n            this.isParsing = false;\r\n            this.resultsForPage = null;\r\n          }\r\n        )\r\n    }\r\n  }\r\n\r\n  showLogFile() {\r\n    this.logFileContent = 'Loading...'\r\n    this.showingLogFile = true;\r\n    let reader = new FileReader();\r\n    reader.readAsText(this.currentlyParsedFile);\r\n    let me = this;\r\n    reader.onload = function () {\r\n      me.logFileContent = reader.result;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { HttpModule } from '@angular/http';\n\nimport { ChartsModule } from 'ng2-charts';\nimport {NgxChartsModule} from '@swimlane/ngx-charts';\n\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\nimport { ServicesModule } from './services/services.module'\nimport { AppComponent } from './app.component';\nimport { MatTab } from '@angular/material/tabs/typings/tab';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ServicesModule,\n    ChartsModule,\n    MatExpansionModule,\n    MatTabsModule,\n    NgxChartsModule,\n    BrowserAnimationsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response, RequestOptionsArgs } from '@angular/http';\nimport { Observable, Subscription, Subject } from 'rxjs';\n\n@Injectable()\nexport class HttpService {\n\n  constructor(\n    private http: Http\n  ) { }\n\n  post(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\n    return this.handleRequest(this.http.post(url, body, options));\n  }\n\n  private handleRequest(request: Observable<Response>): Observable<Response> {\n\n    let responseSubject = new Subject<Response>();\n\n    let requestSubscription = request\n        .subscribe(r => {\n            responseSubject.next(r);\n        }, err => {\n            responseSubject.error(err);\n        }, () => {\n            responseSubject.complete();\n        });\n\n    // Do not expose the ISubscription portion of Subject\n    return responseSubject.asObservable();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/app/services/http.service.ts","import { Injectable } from '@angular/core';\nimport { Response, RequestOptions, Headers } from '@angular/http';\nimport { Observable, Subject } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\nimport { HttpService } from './http.service';\n\n\n@Injectable()\nexport class ParserService {\n\n  constructor(\n    private httpService: HttpService\n  ) { }\n\n  sendFileToParse(file, api_version) : Observable<Response> {\n    let formData:FormData = new FormData();\n    formData.append('logfile', file, file.name);\n    let optHeaders = new Headers();\n    optHeaders.append('Accept', 'application/json');\n    let options = new RequestOptions({ headers: optHeaders});\n    return this.httpService.post(`${environment.parserUploadUrl}/upload/` + api_version, formData, options)\n      .map((response: Response) => {\n        let res = response.json();\n        return res;\n      });\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/app/services/parser.service.ts","import { NgModule } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\nimport { ParserService } from './parser.service';\r\n\r\n\r\n@NgModule({\r\n    providers: [\r\n        HttpService,\r\n        ParserService\r\n    ]\r\n})\r\nexport class ServicesModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/app/services/services.module.ts","export const environment = {\n  production: true,\n  parserUploadUrl: \"https://daoc-log-parse.herokuapp.com\"\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/main.ts","var map = {\n\t\"./af\": \"../../../../moment/locale/af.js\",\n\t\"./af.js\": \"../../../../moment/locale/af.js\",\n\t\"./ar\": \"../../../../moment/locale/ar.js\",\n\t\"./ar-dz\": \"../../../../moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"../../../../moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"../../../../moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"../../../../moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"../../../../moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"../../../../moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"../../../../moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"../../../../moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"../../../../moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"../../../../moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"../../../../moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"../../../../moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"../../../../moment/locale/ar.js\",\n\t\"./az\": \"../../../../moment/locale/az.js\",\n\t\"./az.js\": \"../../../../moment/locale/az.js\",\n\t\"./be\": \"../../../../moment/locale/be.js\",\n\t\"./be.js\": \"../../../../moment/locale/be.js\",\n\t\"./bg\": \"../../../../moment/locale/bg.js\",\n\t\"./bg.js\": \"../../../../moment/locale/bg.js\",\n\t\"./bn\": \"../../../../moment/locale/bn.js\",\n\t\"./bn.js\": \"../../../../moment/locale/bn.js\",\n\t\"./bo\": \"../../../../moment/locale/bo.js\",\n\t\"./bo.js\": \"../../../../moment/locale/bo.js\",\n\t\"./br\": \"../../../../moment/locale/br.js\",\n\t\"./br.js\": \"../../../../moment/locale/br.js\",\n\t\"./bs\": \"../../../../moment/locale/bs.js\",\n\t\"./bs.js\": \"../../../../moment/locale/bs.js\",\n\t\"./ca\": \"../../../../moment/locale/ca.js\",\n\t\"./ca.js\": \"../../../../moment/locale/ca.js\",\n\t\"./cs\": \"../../../../moment/locale/cs.js\",\n\t\"./cs.js\": \"../../../../moment/locale/cs.js\",\n\t\"./cv\": \"../../../../moment/locale/cv.js\",\n\t\"./cv.js\": \"../../../../moment/locale/cv.js\",\n\t\"./cy\": \"../../../../moment/locale/cy.js\",\n\t\"./cy.js\": \"../../../../moment/locale/cy.js\",\n\t\"./da\": \"../../../../moment/locale/da.js\",\n\t\"./da.js\": \"../../../../moment/locale/da.js\",\n\t\"./de\": \"../../../../moment/locale/de.js\",\n\t\"./de-at\": \"../../../../moment/locale/de-at.js\",\n\t\"./de-at.js\": \"../../../../moment/locale/de-at.js\",\n\t\"./de-ch\": \"../../../../moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"../../../../moment/locale/de-ch.js\",\n\t\"./de.js\": \"../../../../moment/locale/de.js\",\n\t\"./dv\": \"../../../../moment/locale/dv.js\",\n\t\"./dv.js\": \"../../../../moment/locale/dv.js\",\n\t\"./el\": \"../../../../moment/locale/el.js\",\n\t\"./el.js\": \"../../../../moment/locale/el.js\",\n\t\"./en-au\": \"../../../../moment/locale/en-au.js\",\n\t\"./en-au.js\": \"../../../../moment/locale/en-au.js\",\n\t\"./en-ca\": \"../../../../moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"../../../../moment/locale/en-ca.js\",\n\t\"./en-gb\": \"../../../../moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"../../../../moment/locale/en-gb.js\",\n\t\"./en-ie\": \"../../../../moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"../../../../moment/locale/en-ie.js\",\n\t\"./en-nz\": \"../../../../moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"../../../../moment/locale/en-nz.js\",\n\t\"./eo\": \"../../../../moment/locale/eo.js\",\n\t\"./eo.js\": \"../../../../moment/locale/eo.js\",\n\t\"./es\": \"../../../../moment/locale/es.js\",\n\t\"./es-do\": \"../../../../moment/locale/es-do.js\",\n\t\"./es-do.js\": \"../../../../moment/locale/es-do.js\",\n\t\"./es.js\": \"../../../../moment/locale/es.js\",\n\t\"./et\": \"../../../../moment/locale/et.js\",\n\t\"./et.js\": \"../../../../moment/locale/et.js\",\n\t\"./eu\": \"../../../../moment/locale/eu.js\",\n\t\"./eu.js\": \"../../../../moment/locale/eu.js\",\n\t\"./fa\": \"../../../../moment/locale/fa.js\",\n\t\"./fa.js\": \"../../../../moment/locale/fa.js\",\n\t\"./fi\": \"../../../../moment/locale/fi.js\",\n\t\"./fi.js\": \"../../../../moment/locale/fi.js\",\n\t\"./fo\": \"../../../../moment/locale/fo.js\",\n\t\"./fo.js\": \"../../../../moment/locale/fo.js\",\n\t\"./fr\": \"../../../../moment/locale/fr.js\",\n\t\"./fr-ca\": \"../../../../moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"../../../../moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"../../../../moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"../../../../moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"../../../../moment/locale/fr.js\",\n\t\"./fy\": \"../../../../moment/locale/fy.js\",\n\t\"./fy.js\": \"../../../../moment/locale/fy.js\",\n\t\"./gd\": \"../../../../moment/locale/gd.js\",\n\t\"./gd.js\": \"../../../../moment/locale/gd.js\",\n\t\"./gl\": \"../../../../moment/locale/gl.js\",\n\t\"./gl.js\": \"../../../../moment/locale/gl.js\",\n\t\"./gom-latn\": \"../../../../moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"../../../../moment/locale/gom-latn.js\",\n\t\"./he\": \"../../../../moment/locale/he.js\",\n\t\"./he.js\": \"../../../../moment/locale/he.js\",\n\t\"./hi\": \"../../../../moment/locale/hi.js\",\n\t\"./hi.js\": \"../../../../moment/locale/hi.js\",\n\t\"./hr\": \"../../../../moment/locale/hr.js\",\n\t\"./hr.js\": \"../../../../moment/locale/hr.js\",\n\t\"./hu\": \"../../../../moment/locale/hu.js\",\n\t\"./hu.js\": \"../../../../moment/locale/hu.js\",\n\t\"./hy-am\": \"../../../../moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"../../../../moment/locale/hy-am.js\",\n\t\"./id\": \"../../../../moment/locale/id.js\",\n\t\"./id.js\": \"../../../../moment/locale/id.js\",\n\t\"./is\": \"../../../../moment/locale/is.js\",\n\t\"./is.js\": \"../../../../moment/locale/is.js\",\n\t\"./it\": \"../../../../moment/locale/it.js\",\n\t\"./it.js\": \"../../../../moment/locale/it.js\",\n\t\"./ja\": \"../../../../moment/locale/ja.js\",\n\t\"./ja.js\": \"../../../../moment/locale/ja.js\",\n\t\"./jv\": \"../../../../moment/locale/jv.js\",\n\t\"./jv.js\": \"../../../../moment/locale/jv.js\",\n\t\"./ka\": \"../../../../moment/locale/ka.js\",\n\t\"./ka.js\": \"../../../../moment/locale/ka.js\",\n\t\"./kk\": \"../../../../moment/locale/kk.js\",\n\t\"./kk.js\": \"../../../../moment/locale/kk.js\",\n\t\"./km\": \"../../../../moment/locale/km.js\",\n\t\"./km.js\": \"../../../../moment/locale/km.js\",\n\t\"./kn\": \"../../../../moment/locale/kn.js\",\n\t\"./kn.js\": \"../../../../moment/locale/kn.js\",\n\t\"./ko\": \"../../../../moment/locale/ko.js\",\n\t\"./ko.js\": \"../../../../moment/locale/ko.js\",\n\t\"./ky\": \"../../../../moment/locale/ky.js\",\n\t\"./ky.js\": \"../../../../moment/locale/ky.js\",\n\t\"./lb\": \"../../../../moment/locale/lb.js\",\n\t\"./lb.js\": \"../../../../moment/locale/lb.js\",\n\t\"./lo\": \"../../../../moment/locale/lo.js\",\n\t\"./lo.js\": \"../../../../moment/locale/lo.js\",\n\t\"./lt\": \"../../../../moment/locale/lt.js\",\n\t\"./lt.js\": \"../../../../moment/locale/lt.js\",\n\t\"./lv\": \"../../../../moment/locale/lv.js\",\n\t\"./lv.js\": \"../../../../moment/locale/lv.js\",\n\t\"./me\": \"../../../../moment/locale/me.js\",\n\t\"./me.js\": \"../../../../moment/locale/me.js\",\n\t\"./mi\": \"../../../../moment/locale/mi.js\",\n\t\"./mi.js\": \"../../../../moment/locale/mi.js\",\n\t\"./mk\": \"../../../../moment/locale/mk.js\",\n\t\"./mk.js\": \"../../../../moment/locale/mk.js\",\n\t\"./ml\": \"../../../../moment/locale/ml.js\",\n\t\"./ml.js\": \"../../../../moment/locale/ml.js\",\n\t\"./mr\": \"../../../../moment/locale/mr.js\",\n\t\"./mr.js\": \"../../../../moment/locale/mr.js\",\n\t\"./ms\": \"../../../../moment/locale/ms.js\",\n\t\"./ms-my\": \"../../../../moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"../../../../moment/locale/ms-my.js\",\n\t\"./ms.js\": \"../../../../moment/locale/ms.js\",\n\t\"./my\": \"../../../../moment/locale/my.js\",\n\t\"./my.js\": \"../../../../moment/locale/my.js\",\n\t\"./nb\": \"../../../../moment/locale/nb.js\",\n\t\"./nb.js\": \"../../../../moment/locale/nb.js\",\n\t\"./ne\": \"../../../../moment/locale/ne.js\",\n\t\"./ne.js\": \"../../../../moment/locale/ne.js\",\n\t\"./nl\": \"../../../../moment/locale/nl.js\",\n\t\"./nl-be\": \"../../../../moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"../../../../moment/locale/nl-be.js\",\n\t\"./nl.js\": \"../../../../moment/locale/nl.js\",\n\t\"./nn\": \"../../../../moment/locale/nn.js\",\n\t\"./nn.js\": \"../../../../moment/locale/nn.js\",\n\t\"./pa-in\": \"../../../../moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"../../../../moment/locale/pa-in.js\",\n\t\"./pl\": \"../../../../moment/locale/pl.js\",\n\t\"./pl.js\": \"../../../../moment/locale/pl.js\",\n\t\"./pt\": \"../../../../moment/locale/pt.js\",\n\t\"./pt-br\": \"../../../../moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"../../../../moment/locale/pt-br.js\",\n\t\"./pt.js\": \"../../../../moment/locale/pt.js\",\n\t\"./ro\": \"../../../../moment/locale/ro.js\",\n\t\"./ro.js\": \"../../../../moment/locale/ro.js\",\n\t\"./ru\": \"../../../../moment/locale/ru.js\",\n\t\"./ru.js\": \"../../../../moment/locale/ru.js\",\n\t\"./sd\": \"../../../../moment/locale/sd.js\",\n\t\"./sd.js\": \"../../../../moment/locale/sd.js\",\n\t\"./se\": \"../../../../moment/locale/se.js\",\n\t\"./se.js\": \"../../../../moment/locale/se.js\",\n\t\"./si\": \"../../../../moment/locale/si.js\",\n\t\"./si.js\": \"../../../../moment/locale/si.js\",\n\t\"./sk\": \"../../../../moment/locale/sk.js\",\n\t\"./sk.js\": \"../../../../moment/locale/sk.js\",\n\t\"./sl\": \"../../../../moment/locale/sl.js\",\n\t\"./sl.js\": \"../../../../moment/locale/sl.js\",\n\t\"./sq\": \"../../../../moment/locale/sq.js\",\n\t\"./sq.js\": \"../../../../moment/locale/sq.js\",\n\t\"./sr\": \"../../../../moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"../../../../moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"../../../../moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"../../../../moment/locale/sr.js\",\n\t\"./ss\": \"../../../../moment/locale/ss.js\",\n\t\"./ss.js\": \"../../../../moment/locale/ss.js\",\n\t\"./sv\": \"../../../../moment/locale/sv.js\",\n\t\"./sv.js\": \"../../../../moment/locale/sv.js\",\n\t\"./sw\": \"../../../../moment/locale/sw.js\",\n\t\"./sw.js\": \"../../../../moment/locale/sw.js\",\n\t\"./ta\": \"../../../../moment/locale/ta.js\",\n\t\"./ta.js\": \"../../../../moment/locale/ta.js\",\n\t\"./te\": \"../../../../moment/locale/te.js\",\n\t\"./te.js\": \"../../../../moment/locale/te.js\",\n\t\"./tet\": \"../../../../moment/locale/tet.js\",\n\t\"./tet.js\": \"../../../../moment/locale/tet.js\",\n\t\"./th\": \"../../../../moment/locale/th.js\",\n\t\"./th.js\": \"../../../../moment/locale/th.js\",\n\t\"./tl-ph\": \"../../../../moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"../../../../moment/locale/tl-ph.js\",\n\t\"./tlh\": \"../../../../moment/locale/tlh.js\",\n\t\"./tlh.js\": \"../../../../moment/locale/tlh.js\",\n\t\"./tr\": \"../../../../moment/locale/tr.js\",\n\t\"./tr.js\": \"../../../../moment/locale/tr.js\",\n\t\"./tzl\": \"../../../../moment/locale/tzl.js\",\n\t\"./tzl.js\": \"../../../../moment/locale/tzl.js\",\n\t\"./tzm\": \"../../../../moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"../../../../moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"../../../../moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"../../../../moment/locale/tzm.js\",\n\t\"./uk\": \"../../../../moment/locale/uk.js\",\n\t\"./uk.js\": \"../../../../moment/locale/uk.js\",\n\t\"./ur\": \"../../../../moment/locale/ur.js\",\n\t\"./ur.js\": \"../../../../moment/locale/ur.js\",\n\t\"./uz\": \"../../../../moment/locale/uz.js\",\n\t\"./uz-latn\": \"../../../../moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"../../../../moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"../../../../moment/locale/uz.js\",\n\t\"./vi\": \"../../../../moment/locale/vi.js\",\n\t\"./vi.js\": \"../../../../moment/locale/vi.js\",\n\t\"./x-pseudo\": \"../../../../moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"../../../../moment/locale/x-pseudo.js\",\n\t\"./yo\": \"../../../../moment/locale/yo.js\",\n\t\"./yo.js\": \"../../../../moment/locale/yo.js\",\n\t\"./zh-cn\": \"../../../../moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"../../../../moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"../../../../moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"../../../../moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"../../../../moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"../../../../moment/locale/zh-tw.js\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../../../../moment/locale recursive ^\\\\.\\\\/.*$\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/daoc-log-parser/~/moment/locale ^\\.\\/.*$\n// module id = ../../../../moment/locale recursive ^\\.\\/.*$\n// module chunks = 2"],"sourceRoot":"webpack:///"}