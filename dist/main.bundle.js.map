{"version":3,"sources":["C:/Git/daoc-log-parser/src async","C:/Git/daoc-log-parser/src/app/app.component.css","C:/Git/daoc-log-parser/src/app/app.component.html","C:/Git/daoc-log-parser/src/app/app.component.ts","C:/Git/daoc-log-parser/src/app/app.module.ts","C:/Git/daoc-log-parser/src/app/services/http.service.ts","C:/Git/daoc-log-parser/src/app/services/parser.service.ts","C:/Git/daoc-log-parser/src/app/services/services.module.ts","C:/Git/daoc-log-parser/src/environments/environment.ts","C:/Git/daoc-log-parser/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,8D;;;;;;;ACNA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,gDAAgD,wuBAAwuB,+CAA+C,4RAA4R,kDAAkD,yRAAyR,iDAAiD,yaAAya,2CAA2C,2NAA2N,0CAA0C,yQAAyQ,4CAA4C,2fAA2f,WAAW,8EAA8E,oBAAoB,4hBAA4hB,WAAW,0EAA0E,oBAAoB,2cAA2c,+CAA+C,qNAAqN,4CAA4C,4NAA4N,uDAAuD,+WAA+W,OAAO,2CAA2C,gBAAgB,kYAAkY,MAAM,u3BAAu3B,iDAAiD,8EAA8E,2DAA2D,wOAAwO,mDAAmD,8EAA8E,6DAA6D,yOAAyO,oDAAoD,8EAA8E,8DAA8D,wOAAwO,mDAAmD,8EAA8E,6DAA6D,wOAAwO,mDAAmD,8EAA8E,6DAA6D,+OAA+O,yDAAyD,2RAA2R,uDAAuD,wRAAwR,kDAAkD,8EAA8E,4DAA4D,0OAA0O,uDAAuD,4RAA4R,wDAAwD,kmBAAkmB,cAAc,mFAAmF,uBAAuB,20BAA20B,oDAAoD,8EAA8E,8DAA8D,yOAAyO,qDAAqD,8EAA8E,+DAA+D,8OAA8O,0DAA0D,2RAA2R,wDAAwD,wRAAwR,mDAAmD,8EAA8E,6DAA6D,0OAA0O,wDAAwD,4RAA4R,yDAAyD,omBAAomB,cAAc,mFAAmF,uBAAuB,ykCAAykC,UAAU,mFAAmF,sBAAsB,mFAAmF,sBAAsB,mFAAmF,sBAAsB,mFAAmF,sBAAsB,mFAAmF,sBAAsB,u0BAAu0B,6CAA6C,8EAA8E,uDAAuD,wOAAwO,+CAA+C,8EAA8E,yDAAyD,yOAAyO,gDAAgD,8EAA8E,0DAA0D,wOAAwO,+CAA+C,8EAA8E,yDAAyD,wOAAwO,+CAA+C,8EAA8E,yDAAyD,mPAAmP,0DAA0D,wRAAwR,8CAA8C,2RAA2R,mDAAmD,4RAA4R,oDAAoD,+RAA+R,iDAAiD,+RAA+R,qDAAqD,8EAA8E,+DAA+D,yOAAyO,gDAAgD,8EAA8E,0DAA0D,mPAAmP,0DAA0D,gSAAgS,oDAAoD,4RAA4R,oDAAoD,0lBAA0lB,cAAc,mFAAmF,uBAAuB,8P;;;;;;;;;;;;;;;;;;;;;ACAvvtB;AAC4C;AAEzD;AAU1D,IAAa,YAAY;IAIvB,sBACU,WAAwB,EACxB,aAA4B;QAD5B,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAJ7B,YAAO,GAAW,UAAU,CAAC;QAStC,aAAQ,GAAG;YACT,8DAA8D;YAC9D,eAAe;YACf,+BAA+B;YAC/B,YAAY;YACZ,oBAAoB;YACpB,8BAA8B;YAC9B,iBAAiB;YACjB,kBAAkB;YAClB,kCAAkC;SACnC;QAED,qBAAgB,GAAG,EAAE;IAhBlB,CAAC;IAmBJ,+BAAQ,GAAR;IACA,CAAC;IAGD,mCAAY,GAAZ,UAAa,KAAK;QAAlB,iBAgBC;QAfC,IAAI,QAAQ,GAAa,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC5C,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC;aACrC,SAAS,CACR,UAAC,OAAY;YACX,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC;YAClC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,KAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;YACnC,CAAC;YACD,IAAI,aAAa,GAAG,OAAO,CAAC,SAAS,CAAmB,CAAC;YACzD,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAClB,KAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YACtC,CAAC;QACH,CAAC,CACF;IACL,CAAC;IAGD,0CAAmB,GAAnB,UAAoB,aAAa;QAC/B,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACvB,WAAW,IAAI,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC3C,CAAC;QACD,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACvB,WAAW,IAAI,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC3C,CAAC;QACD,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACvB,WAAW,IAAI,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC3C,CAAC;QACD,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACvB,WAAW,IAAI,aAAa,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QAC1C,CAAC;QACD,MAAM,CAAC,WAAW;IACpB,CAAC;IACH,mBAAC;AAAD,CAAC;AA/DU;IAAR,mFAAK,EAAE;;6CAA8B;AAF3B,YAAY;IALxB,wFAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,0EAAmC;QACnC,yEAAkC;KACnC,CAAC;yDAMuB,mEAAW,oBAAX,mEAAW,sDACT,+EAAa,oBAAb,+EAAa;GAN3B,YAAY,CAiExB;AAjEwB;;;;;;;;;;;;;;;;;;;;;;;;ACbiC;AACjB;AACwB;AAClB;AACJ;AAEgB;AACZ;AAiB/C,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IAfrB,sFAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;SACb;QACD,OAAO,EAAE;YACP,gFAAa;YACb,mEAAW;YACX,2EAAmB;YACnB,qEAAc;YACd,iFAAc;YACd,iEAAU;SACX;QACD,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;ACxBqB;AACiC;AACnB;AAGzD,IAAa,WAAW;IAEtB,qBACU,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAChB,CAAC;IAEL,0BAAI,GAAJ,UAAK,GAAW,EAAE,IAAS,EAAE,OAA4B;QACvD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;IAChE,CAAC;IAEO,mCAAa,GAArB,UAAsB,OAA6B;QAEjD,IAAI,eAAe,GAAG,IAAI,6CAAO,EAAY,CAAC;QAE9C,IAAI,mBAAmB,GAAG,OAAO;aAC5B,SAAS,CAAC,WAAC;YACR,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC,EAAE,aAAG;YACF,yBAAyB;YACzB,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC,EAAE;YACC,eAAe,CAAC,QAAQ,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEP,qDAAqD;QACrD,MAAM,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;IACxC,CAAC;IACH,kBAAC;AAAD,CAAC;AA3BY,WAAW;IADvB,wFAAU,EAAE;yDAIK,2DAAI,oBAAJ,2DAAI;GAHT,WAAW,CA2BvB;AA3BuB;;;;;;;;;;;;;;;;;;;;;;;;ACLmB;AACuB;AAEL;AAEhB;AAI7C,IAAa,aAAa;IAExB,uBACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,uCAAe,GAAf,UAAgB,IAAI;QAClB,IAAI,QAAQ,GAAY,IAAI,QAAQ,EAAE,CAAC;QACvC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,UAAU,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC/B,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QAChD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;QACzD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAI,8EAAW,CAAC,eAAe,YAAS,EAAE,QAAQ,EAAE,OAAO,CAAC;aACrF,GAAG,CAAC,UAAC,QAAkB;YACtB,IAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;YAC1B,MAAM,CAAC,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACP,CAAC;IAGH,oBAAC;AAAD,CAAC;AApBY,aAAa;IADzB,wFAAU,EAAE;yDAIY,kEAAW,oBAAX,kEAAW;GAHvB,aAAa,CAoBzB;AApByB;;;;;;;;;;;;;;;;;;;;ACTe;AACI;AACI;AASjD,IAAa,cAAc;IAA3B;IACA,CAAC;IAAD,qBAAC;AAAD,CAAC;AADY,cAAc;IAN1B,sFAAQ,CAAC;QACN,SAAS,EAAE;YACP,kEAAW;YACX,sEAAa;SAChB;KACJ,CAAC;GACW,cAAc,CAC1B;AAD0B;;;;;;;;;;ACXpB,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;IAChB,eAAe,EAAE,sCAAsC;CACxD,CAAC;;;;;;;;;;;;;;ACH6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/daoc-log-parser/src async\n// module id = ../../../../../src async recursive\n// module chunks = 2","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/daoc-log-parser/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 2","module.exports = \"<div style=\\\"padding-left:4ch; padding-top: 4ch\\\">\\r\\n    \\r\\n    <input type=\\\"file\\\" (change)=\\\"fileSelected($event)\\\" placeholder=\\\"Select log file\\\" accept=\\\".log, .txt\\\">\\r\\n\\r\\n    \\r\\n    <div class=\\\"container-fluid\\\" *ngIf=\\\"resultsForPage\\\">\\r\\n        <h1><b>Parse Results</b></h1>        \\r\\n        <form class=\\\"form-group\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                    <h3 class=\\\"panel-heading\\\">Money</h3>\\r\\n                        <table style=\\\"width: 100%\\\">\\r\\n                            <tr *ngIf=\\\"currencyPrintHelper(resultsForPage.Cash.Loot) != ''\\\">\\r\\n                                <td><strong>Looted:</strong></td>\\r\\n                                <td style=\\\"text-align: right\\\">{{currencyPrintHelper(resultsForPage.Cash.Loot)}}</td>\\r\\n                            </tr>\\r\\n                            <tr *ngIf=\\\"currencyPrintHelper(resultsForPage.Cash.Expense) != ''\\\">\\r\\n                                <td><strong>Expenses:</strong></td>\\r\\n                                <td style=\\\"text-align: right\\\">{{currencyPrintHelper(resultsForPage.Cash.Expense)}}</td>\\r\\n                            </tr>\\r\\n                            <tr *ngIf=\\\"currencyPrintHelper(resultsForPage.Cash.Income) != ''\\\">\\r\\n                                <td><strong>Income:</strong></td>\\r\\n                                <td style=\\\"text-align: right\\\">{{currencyPrintHelper(resultsForPage.Cash.Income)}}</td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-3\\\">\\r\\n                    <h3 class=\\\"panel-heading\\\">Healing</h3>\\r\\n                        <table>\\r\\n                            <tr>\\r\\n                                <td><strong>Delivered:</strong></td>\\r\\n                                <td style=\\\"text-align: right\\\">{{resultsForPage.Healing.Delivered | number}}</td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td><strong>Received:</strong></td>\\r\\n                                <td style=\\\"text-align: right\\\">{{resultsForPage.Healing.Received | number}}</td>\\r\\n                            </tr>\\r\\n                            <tr *ngIf=\\\"resultsForPage.Healing.Lifetapped\\\">\\r\\n                                <td><strong>Lifetapped:</strong></td>\\r\\n                                <td style=\\\"text-align: right\\\">{{resultsForPage.Healing.Lifetapped | number}}</td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                        <br/>\\r\\n                        <div *ngIf=\\\"resultsForPage.Healing.Targets.length\\\">\\r\\n                            <thead><strong>Delivered breakdown:</strong></thead>\\r\\n                            <table class=\\\"scrollTable table-striped scrollStriped\\\">\\r\\n                                <tr *ngFor=\\\"let target of resultsForPage.Healing.Targets\\\">\\r\\n                                    <td>{{target[0]}}</td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{target[1] | number}}</td>\\r\\n                                </tr>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                        <br/>\\r\\n                        <div *ngIf=\\\"resultsForPage.Healing.Sources.length\\\">\\r\\n                            <thead><strong>Received breakdown:</strong></thead>\\r\\n                            <table class=\\\"scrollTable table-striped scrollStriped\\\">\\r\\n                            <tr *ngFor=\\\"let source of resultsForPage.Healing.Sources\\\">\\r\\n                                <td>{{source[0]}}</td>\\r\\n                                <td style=\\\"text-align:right\\\">{{source[1] | number}}</td>\\r\\n                            </tr>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                    <h3 class=\\\"panel-heading\\\">Summary</h3>\\r\\n                        <table>\\r\\n                            <tr>\\r\\n                                <td><strong>Deaths:</strong></td>\\r\\n                                <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Summary.Deaths | number}}</td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td><strong>RPs:</strong></td>\\r\\n                                <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Summary.RPs | number}}</td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td><strong>Deathblows:</strong></td>\\r\\n                                <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Summary.DeathblowCount | number}}</td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                    <br/>\\r\\n                    <table class=\\\"scrollTable\\\">\\r\\n                        <thead><strong>Deathblow list:</strong></thead>\\r\\n                        <tr *ngFor=\\\"let db of resultsForPage.Combat.Summary.DeathBlows\\\">\\r\\n                            <td>{{db[0]}}</td>\\r\\n                            <td>{{db[1] | number}}</td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </div>\\r\\n                <div id=\\\"todos\\\" class=\\\"col-sm-4 panel-default\\\">\\r\\n                    <h3 class=\\\"panel-heading\\\">TODO list:</h3>\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                        <ul>\\r\\n                            <li *ngFor=\\\"let todo of todoList\\\">{{todo}}</li>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <h3>Combat</h3>\\r\\n                <div class=\\\"panel-default panel\\\">\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <h4>Melee Attack</h4>\\r\\n                            <table class=\\\"table-striped striped\\\">\\r\\n                                <tr>\\r\\n                                    <td></td>\\r\\n                                    <th style=\\\"text-align:right\\\">Count</th>\\r\\n                                    <th style=\\\"text-align:right\\\">Percent</th>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Hits:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.Hits | number}}</td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.Percents.Hits | percent}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Blocks:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.Blocks | number}}</td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.Percents.Blocks | percent}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Parries:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.Parries | number}}</td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.Percents.Parries | percent}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Evades:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.Evades | number}}</td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.Percents.Evades | percent}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Misses:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.Misses | number}}</td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.Percents.Misses | percent}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Total Attacks:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.TotalAttacks | number}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Base Dmg:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.BaseDamage | number}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Crits:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.Crits | number}}</td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.Percents.Crits | percent}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Crit Dmg:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.CritDamage | number}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Total Dmg:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.MeleeAttack.TotalDamage | number}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                            </table>\\r\\n                            <br/>\\r\\n                            <div *ngIf=\\\"resultsForPage.Combat.MeleeAttack.Targets.length\\\">\\r\\n                                <thead><strong>Damage Breakdown:</strong></thead>\\r\\n                                <table class=\\\"scrollTable table-striped scrollStriped\\\">\\r\\n                                    <tr *ngFor=\\\"let dmgTarget of resultsForPage.Combat.MeleeAttack.Targets\\\">\\r\\n                                        <td>{{dmgTarget[0]}}</td>\\r\\n                                        <td style=\\\"text-align: right\\\">{{dmgTarget[1] | number}}</td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-4\\\">\\r\\n                        <h4>Caster Attack</h4>\\r\\n                            <table class=\\\"table-striped striped\\\">\\r\\n                                <tr>\\r\\n                                    <th></th>\\r\\n                                    <th style=\\\"text-align:right\\\"><strong>Count</strong></th>\\r\\n                                    <th style=\\\"text-align:right\\\"><strong>Percent</strong></th>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Hits:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.CasterAttack.Landed | number}}</td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.CasterAttack.Percents.Landed | percent}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Resists:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.CasterAttack.Resists | number}}</td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.CasterAttack.Percents.Resists | percent}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>TotalAttacks:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.CasterAttack.TotalAttacks | number}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Base Dmg:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.CasterAttack.BaseDamage | number}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Crits:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.CasterAttack.Crits | number}}</td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.CasterAttack.Percents.Crits | percent}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Crit Dmg:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.CasterAttack.CritDamage | number}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Total Dmg:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.CasterAttack.TotalDamage | number}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                            </table>\\r\\n                            <br/>\\r\\n                            <div *ngIf=\\\"resultsForPage.Combat.CasterAttack.Targets.length\\\">\\r\\n                                <thead><strong>Damage Breakdown:</strong></thead>\\r\\n                                <table class=\\\"scrollTable table-striped scrollStriped\\\">\\r\\n                                    <tr *ngFor=\\\"let dmgTarget of resultsForPage.Combat.CasterAttack.Targets\\\">\\r\\n                                        <td>{{dmgTarget[0]}}</td>\\r\\n                                        <td style=\\\"text-align: right\\\">{{dmgTarget[1] | number}}</td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"resultsForPage.Combat.CasterAttack.SpellStats\\\">\\r\\n                                <br/>\\r\\n                                <table class=\\\"table-striped scrollStriped\\\">\\r\\n                                    <tr>\\r\\n                                        <th>Spell</th>\\r\\n                                        <th style=\\\"text-align:center\\\">Casted</th>\\r\\n                                        <th style=\\\"text-align:center\\\">Landed</th>\\r\\n                                        <th style=\\\"text-align:center\\\">Resisted</th>\\r\\n                                        <th style=\\\"text-align:center\\\">Crits</th>\\r\\n                                        <th style=\\\"text-align:center\\\">Total Dmg</th>\\r\\n                                    </tr>\\r\\n                                    <tr *ngFor=\\\"let spell of resultsForPage.Combat.CasterAttack.SpellStats\\\">\\r\\n                                        <td>{{spell[0]}}</td>\\r\\n                                        <td style=\\\"text-align:center\\\">{{spell[1][0] | number}}</td>\\r\\n                                        <td style=\\\"text-align:center\\\">{{spell[1][1] | number}}</td>\\r\\n                                        <td style=\\\"text-align:center\\\">{{spell[1][2] | number}}</td>\\r\\n                                        <td style=\\\"text-align:center\\\">{{spell[1][3] | number}}</td>\\r\\n                                        <td style=\\\"text-align:center\\\">{{spell[1][4] | number}}</td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-3\\\">\\r\\n                        <h4>Defense</h4>\\r\\n                            <table class=\\\"table-striped striped\\\">\\r\\n                                <tr>\\r\\n                                    <th></th>\\r\\n                                    <th style=\\\"text-align: right\\\"><strong>Count</strong></th>\\r\\n                                    <th style=\\\"text-align: right\\\"><strong>Percent</strong></th>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Hits:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Hits | number}}</td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Percents.Hits | percent}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Blocks:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Blocks | number}}</td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Percents.Blocks | percent}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Parries:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Parries | number}}</td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Percents.Parries | percent}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Evades:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Evades | number}}</td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Percents.Evades | percent}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Misses:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Misses | number}}</td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Percents.Misses | percent}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Tot Melee Attacks:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.TotalMeleeAttacks | number}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Crits:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Crits | number}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Crit Dmg:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.CritDamage | number}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Melee Dmg:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.MeleeDamage | number}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Dmg Absorbed:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Absorbed | number}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Spells/Procs:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.SpellsLanded | number}}</td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Percents.SpellsLanded | percent}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Resists:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Resists | number}}</td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.Percents.Resists | percent}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Tot Magic Attacks:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.TotalSpellAttacks | number}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>    \\r\\n                                <tr>\\r\\n                                    <td><strong>Spell Dmg:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.SpellDamage | number}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td><strong>Total Dmg:</strong></td>\\r\\n                                    <td style=\\\"text-align:right\\\">{{resultsForPage.Combat.Defense.TotalDamage | number}}</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                            </table>\\r\\n                            <br/>\\r\\n                            <div *ngIf=\\\"resultsForPage.Combat.Defense.Sources.length\\\">\\r\\n                                <thead><strong>Damage Breakdown:</strong></thead>\\r\\n                                <table class=\\\"scrollTable table-striped scrollStriped\\\">\\r\\n                                    <tr *ngFor=\\\"let dmgSource of resultsForPage.Combat.Defense.Sources\\\">\\r\\n                                        <td>{{dmgSource[0]}}</td>\\r\\n                                        <td style=\\\"text-align: right\\\">{{dmgSource[1] | number}}</td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/daoc-log-parser/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 2","import { Component, OnInit, Input, HostListener } from '@angular/core';\nimport { FormsModule, FormGroup, FormBuilder, FormControl, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { FileDropModule, UploadFile, UploadEvent } from 'ngx-file-drop';\nimport { ParserService } from './services/parser.service';\n\nimport { ParsingResults } from '../models/parse-results.model';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  \n  @Input() fileExt: string = \"TXT, LOG\";\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private parserService: ParserService\n  ) {}\n\n  resultsForPage: ParsingResults;\n\n  todoList = [\n    'Determine if bleed damage is distinct from proc/spell damage',\n    'Wild healing?',\n    'How is kill-count determined?',\n    'Pet damage',\n    'Style growth rates',\n    'Add self-healing to received',\n    'Stats per spell',\n    'Unassigned crits',\n    'Calculate all AOE dmg for 1 cast'\n  ]\n\n  errorMessageList = []\n\n\n  ngOnInit() {\n  }\n\n\n  fileSelected(event) {\n    let fileList: FileList = event.target.files;\n    let file = fileList[0];\n    this.parserService.sendFileToParse(file)\n      .subscribe(\n        (results: any) => {\n          let messages = results['Messages']\n          if (messages) {\n            this.errorMessageList = messages;\n          }\n          let castedResults = results['Results'] as ParsingResults;\n          if (castedResults) {\n            this.resultsForPage = castedResults;\n          }\n        }\n      )\n  }\n\n\n  currencyPrintHelper(currency_dict) {\n    let result_text = '';\n    if (currency_dict[0] > 0) {\n        result_text += currency_dict[0] + 'p ';\n    } \n    if (currency_dict[1] > 0) {\n        result_text += currency_dict[1] + 'g ';\n    }\n    if (currency_dict[2] > 0) {\n        result_text += currency_dict[2] + 's ';\n    }\n    if (currency_dict[3] > 0) {\n        result_text += currency_dict[3] + 'c';\n    }\n    return result_text\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { FileDropModule } from 'ngx-file-drop';\nimport { HttpModule } from '@angular/http';\n\nimport { ServicesModule } from './services/services.module'\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FileDropModule,\n    ServicesModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response, RequestOptionsArgs } from '@angular/http';\nimport { Observable, Subscription, Subject } from 'rxjs';\n\n@Injectable()\nexport class HttpService {\n\n  constructor(\n    private http: Http\n  ) { }\n\n  post(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\n    return this.handleRequest(this.http.post(url, body, options));\n  }\n\n  private handleRequest(request: Observable<Response>): Observable<Response> {\n\n    let responseSubject = new Subject<Response>();\n\n    let requestSubscription = request\n        .subscribe(r => {\n            responseSubject.next(r);\n        }, err => {\n            // this.handleError(err);\n            responseSubject.error(err);\n        }, () => {\n            responseSubject.complete();\n        });\n\n    // Do not expose the ISubscription portion of Subject\n    return responseSubject.asObservable();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/app/services/http.service.ts","import { Injectable } from '@angular/core';\nimport { Response, RequestOptions, Headers } from '@angular/http';\nimport { Observable, Subject } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\nimport { HttpService } from './http.service';\n\n\n@Injectable()\nexport class ParserService {\n\n  constructor(\n    private httpService: HttpService\n  ) { }\n\n  sendFileToParse(file) : Observable<Response> {\n    let formData:FormData = new FormData();\n    formData.append('logfile', file, file.name);\n    let optHeaders = new Headers();\n    optHeaders.append('Accept', 'application/json');\n    let options = new RequestOptions({ headers: optHeaders});\n    return this.httpService.post(`${environment.parserUploadUrl}/upload`, formData, options)\n      .map((response: Response) => {\n        let res = response.json();\n        return res;\n      });\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/app/services/parser.service.ts","import { NgModule } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\nimport { ParserService } from './parser.service';\r\n\r\n\r\n@NgModule({\r\n    providers: [\r\n        HttpService,\r\n        ParserService\r\n    ]\r\n})\r\nexport class ServicesModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/app/services/services.module.ts","export const environment = {\n  production: true,\n  parserUploadUrl: \"https://daoc-log-parse.herokuapp.com\"\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/daoc-log-parser/src/main.ts"],"sourceRoot":"webpack:///"}